<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RestModels</name>
    </assembly>
    <members>
        <member name="T:RestModels.Actions.DelegatePostOpAction`2">
            <summary>
                Post-operation action that uses a delegate as its action
            </summary>
            <typeparam name="TModel">The type of model that has been operated on</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="F:RestModels.Actions.DelegatePostOpAction`2.Action">
            <summary>
                The action to run post-op
            </summary>
        </member>
        <member name="M:RestModels.Actions.DelegatePostOpAction`2.#ctor(System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.Threading.Tasks.Task})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Actions.DelegatePostOpAction`2" /> class.
            </summary>
            <param name="action">The action to run post-op</param>
        </member>
        <member name="M:RestModels.Actions.DelegatePostOpAction`2.RunAsync(RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Runs this post-operation action
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The data that resulted from the operation</param>
            <returns>When the action is complete</returns>
        </member>
        <member name="T:RestModels.Actions.DelegatePreOpAction`2">
            <summary>
                Pre-operation action that uses a delegate as its action
            </summary>
            <typeparam name="TModel">The type of model that has been operated on</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="F:RestModels.Actions.DelegatePreOpAction`2.Action">
            <summary>
                The action to run pre-op
            </summary>
        </member>
        <member name="M:RestModels.Actions.DelegatePreOpAction`2.#ctor(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Threading.Tasks.Task})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Actions.DelegatePreOpAction`2" /> class.
            </summary>
            <param name="action">The action to run pre-op</param>
        </member>
        <member name="M:RestModels.Actions.DelegatePreOpAction`2.RunAsync(RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
                Runs this pre-operation action
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The data that resulted from the operation</param>
            <returns>When the action is complete</returns>
        </member>
        <member name="T:RestModels.Actions.IPostOpAction`2">
            <summary>
                An action that is run after the operation occurs
            </summary>
            <typeparam name="TModel">The type of model that has been operated on</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="M:RestModels.Actions.IPostOpAction`2.RunAsync(RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Runs this post-operation action
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The data that resulted from the operation</param>
            <returns>When the action is complete</returns>
        </member>
        <member name="T:RestModels.Actions.IPreOpAction`2">
            <summary>
                An action that is run before the operation occurs
            </summary>
            <typeparam name="TModel">The type of model that will be operated on</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="M:RestModels.Actions.IPreOpAction`2.RunAsync(RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
                Runs this pre-operation action
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The dataset that the operation will be performed on</param>
            <returns>When the action is complete</returns>
        </member>
        <member name="T:RestModels.Auth.BasicAuthProvider`2">
            <summary>
                Auth provider that uses basic authentication to authorize the user
            </summary>
            <typeparam name="TModel">The type of model that this API handles</typeparam>
            <typeparam name="TUser">The type of the authenticated user context</typeparam>
        </member>
        <member name="F:RestModels.Auth.BasicAuthProvider`2.AuthDelegate">
            <summary>
                The delegate to use to get a reference to an authenticated user context.
            </summary>
        </member>
        <member name="M:RestModels.Auth.BasicAuthProvider`2.#ctor(System.Func{System.String,System.String,System.Threading.Tasks.Task{`1}})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.BasicAuthProvider`2" /> class.
            </summary>
            <param name="authDelegate">
                The delegate that, when called with the decoded username and password, will return a
                reference to an authenticated user context, or throw if the credentials are invalid
            </param>
        </member>
        <member name="M:RestModels.Auth.BasicAuthProvider`2.AuthenticateAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Authenticates the given request context, and returns the authenticated user
            </summary>
            <param name="context">The current API context</param>
            <returns>The currently authenticated user context</returns>
        </member>
        <member name="M:RestModels.Auth.BasicAuthProvider`2.CanAuthAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Gets whether or not the given request can be authenticated for
            </summary>
            <param name="context">The current API context</param>
            <returns> 
                <see langword="true"/> if this request contains an Authorization header that starts with "Basic", <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="T:RestModels.Auth.DelegateAuthProvider`2">
            <summary>
                Auth provider that uses a delegate to retrieve the user context
            </summary>
            <typeparam name="TModel">The type of model served by the API</typeparam>
            <typeparam name="TUser">The authenticated user context type</typeparam>
        </member>
        <member name="F:RestModels.Auth.DelegateAuthProvider`2.AuthDelegate">
            <summary>
                The delegate to use to retrieve a user context
            </summary>
        </member>
        <member name="M:RestModels.Auth.DelegateAuthProvider`2.#ctor(System.Func{RestModels.Context.IApiContext{`0,`1},System.Threading.Tasks.Task{`1}})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.DelegateAuthProvider`2" /> class.
            </summary>
            <param name="authDelegate">The delegate to use to retrieve a user context</param>
        </member>
        <member name="M:RestModels.Auth.DelegateAuthProvider`2.AuthenticateAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Authenticates the given request context, and returns the authenticated user
            </summary>
            <param name="context">The current API context</param>
            <returns>The currently authenticated user context</returns>
        </member>
        <member name="M:RestModels.Auth.DelegateAuthProvider`2.CanAuthAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Gets whether or not the given request can be authenticated for
            </summary>
            <param name="context">The current API context</param>
            <returns><see langword="true"/></returns>
        </member>
        <member name="T:RestModels.Auth.HeaderAuthProvider`2">
            <summary>
                Auth provider that uses header value authentication to authorize the user
            </summary>
            <typeparam name="TModel">The type of model that this API handles</typeparam>
            <typeparam name="TUser">The type of the authenticated user context</typeparam>
        </member>
        <member name="F:RestModels.Auth.HeaderAuthProvider`2.AuthDelegate">
            <summary>
                The delegate to use to get a reference to an authenticated user context.
            </summary>
        </member>
        <member name="F:RestModels.Auth.HeaderAuthProvider`2.HeaderName">
            <summary>
                The name of the header containing the API key
            </summary>
        </member>
        <member name="M:RestModels.Auth.HeaderAuthProvider`2.#ctor(System.String,System.Func{System.String,System.Threading.Tasks.Task{`1}})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.HeaderAuthProvider`2" /> class.
            </summary>
            <param name="headerName">The name of the header containing the API key</param>
            <param name="authDelegate">
                The delegate that, when called with the header value, will return a
                reference to an authenticated user context, or throw if the key is invalid
            </param>
        </member>
        <member name="M:RestModels.Auth.HeaderAuthProvider`2.AuthenticateAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Authenticates the given request context, and returns the authenticated user
            </summary>
            <param name="context">The current API context</param>
            <returns>The currently authenticated user context</returns>
        </member>
        <member name="M:RestModels.Auth.HeaderAuthProvider`2.CanAuthAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Gets whether or not the given request can be authenticated for
            </summary>
            <param name="context">The current API context</param>
            <returns>
                <see langword="true"/> if this request contains the header value this <see cref="T:RestModels.Auth.HeaderAuthProvider`2"/> authenticates with
            </returns>
        </member>
        <member name="T:RestModels.Auth.IAuthProvider`2">
            <summary>
                Providers for a RestModel API authentication
            </summary>
            <typeparam name="TModel">The type of model served by the API</typeparam>
            <typeparam name="TUser">The authenticated user context type</typeparam>
        </member>
        <member name="M:RestModels.Auth.IAuthProvider`2.AuthenticateAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Authenticates the given request context, and returns the authenticated user
            </summary>
            <param name="context">The current API context</param>
            <returns>The currently authenticated user context</returns>
        </member>
        <member name="M:RestModels.Auth.IAuthProvider`2.CanAuthAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Gets whether or not the given request can be authenticated for
            </summary>
            <param name="context">The current API context</param>
            <returns>
                <see langword="true"/> if this request contains the necessary attributes to be authenticated by this
                <see cref="T:RestModels.Auth.IAuthProvider`2" />, <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="T:RestModels.Auth.IdentityAuthProvider`2">
            <summary>
                Auth provider that uses ASP.NET Core Identity to authorize the user
            </summary>
            <typeparam name="TModel">The type of model that this API handles</typeparam>
            <typeparam name="TUser">The type of the authenticated user context</typeparam>
        </member>
        <member name="F:RestModels.Auth.IdentityAuthProvider`2.Policy">
            <summary>
            	The policy that the <typeparamref cref="!:TUser"/> must fulfill in order for this <see cref="T:RestModels.Auth.IAuthProvider`2"/> to succeed
            </summary>
        </member>
        <member name="F:RestModels.Auth.IdentityAuthProvider`2.Roles">
            <summary>
            	The roles that the <typeparamref cref="!:TUser"/> must be in for this <see cref="T:RestModels.Auth.IAuthProvider`2"/> to succeed
            </summary>
        </member>
        <member name="M:RestModels.Auth.IdentityAuthProvider`2.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.IdentityAuthProvider`2" /> class.
            </summary>
        </member>
        <member name="M:RestModels.Auth.IdentityAuthProvider`2.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.IdentityAuthProvider`2" /> class.
            </summary>
            <param name="policy">The policy that the <typeparamref cref="!:TUser"/> must fulfill to authenticate</param>
        </member>
        <member name="M:RestModels.Auth.IdentityAuthProvider`2.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.IdentityAuthProvider`2" /> class.
            </summary>
            <param name="roles">The roles that the <typeparamref cref="!:TUser"/> must be in to authenticate</param>
        </member>
        <member name="M:RestModels.Auth.IdentityAuthProvider`2.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.IdentityAuthProvider`2" /> class.
            </summary>
            <param name="policy">The policy that the <typeparamref cref="!:TUser"/> must fulfill to authenticate</param>
            <param name="roles">The roles that the <typeparamref cref="!:TUser"/> must be in to authenticate</param>
        </member>
        <member name="M:RestModels.Auth.IdentityAuthProvider`2.AuthenticateAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Authenticates the given request context, and returns the authenticated user
            </summary>
            <param name="context">The current API context</param>
            <returns>The currently authenticated user context</returns>
        </member>
        <member name="M:RestModels.Auth.IdentityAuthProvider`2.CanAuthAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Gets whether or not the given request can be authenticated for
            </summary>
            <param name="context">The current API context</param>
            <returns>
                <see langword="true"/> always
            </returns>
        </member>
        <member name="T:RestModels.Auth.NoUser">
            <summary>
                Token class that indicates that there is no user context for the API
            </summary>
        </member>
        <member name="T:RestModels.Auth.QueryAuthProvider`2">
            <summary>
                Auth provider that uses query parameter authentication to authorize the user
            </summary>
            <typeparam name="TModel">The type of model that this API handles</typeparam>
            <typeparam name="TUser">The type of the authenticated user context</typeparam>
        </member>
        <member name="F:RestModels.Auth.QueryAuthProvider`2.AuthDelegate">
            <summary>
                The delegate to use to get a reference to an authenticated user context.
            </summary>
        </member>
        <member name="F:RestModels.Auth.QueryAuthProvider`2.ParameterName">
            <summary>
                The name of the query parameter containing the API key
            </summary>
        </member>
        <member name="M:RestModels.Auth.QueryAuthProvider`2.#ctor(System.String,System.Func{System.String,System.Threading.Tasks.Task{`1}})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Auth.QueryAuthProvider`2" /> class.
            </summary>
            <param name="parameterName">The name of the query parameter containing the API key</param>
            <param name="authDelegate">
                The delegate that, when called with the parameter value, will return a
                reference to an authenticated user context, or throw if the key is invalid
            </param>
        </member>
        <member name="M:RestModels.Auth.QueryAuthProvider`2.AuthenticateAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Authenticates the given request context, and returns the authenticated user
            </summary>
            <param name="context">The current API context</param>
            <returns>The currently authenticated user context</returns>
        </member>
        <member name="M:RestModels.Auth.QueryAuthProvider`2.CanAuthAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Gets whether or not the given request can be authenticated for
            </summary>
            <param name="context">The current API context</param>
            <returns>
                <see langword="true"/> if this request contains the query parameter this
                <see cref="T:RestModels.Auth.IAuthProvider`2" /> authenticates with, <see langword="false"/> otherwise.
            </returns>
        </member>
        <member name="T:RestModels.Conditions.DelegateCondition`2">
            <summary>
                Condition that uses a delegate to check if it has been met
            </summary>
            <typeparam name="TModel">The type of model in the dataset</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="F:RestModels.Conditions.DelegateCondition`2.ConditionDelegate">
            <summary>
                The delegate to use to check the status of the condition
            </summary>
        </member>
        <member name="M:RestModels.Conditions.DelegateCondition`2.#ctor(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Conditions.DelegateCondition`2" /> class.
            </summary>
            <param name="conditionDelegate">The delegate to use to check the status of the condition</param>
        </member>
        <member name="P:RestModels.Conditions.DelegateCondition`2.FailureMessage">
            <summary>
                Gets a message indicating why the condition might have failed
            </summary>
        </member>
        <member name="M:RestModels.Conditions.DelegateCondition`2.VerifyAsync(RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
                Verifies that the current request meets a condition
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The current dataset to be filtered</param>
            <returns><see langword="true"/> if the request should continue, <see langword="false"/> otherwise</returns>
        </member>
        <member name="T:RestModels.Conditions.ICondition`2">
            <summary>
                A condition that ensures a request context meets a specific requirement
            </summary>
            <typeparam name="TModel">The type of model in the dataset</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="P:RestModels.Conditions.ICondition`2.FailureMessage">
            <summary>
                Gets a message indicating why the condition might have failed
            </summary>
        </member>
        <member name="M:RestModels.Conditions.ICondition`2.VerifyAsync(RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
                Verifies that the current request meets a condition
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The current dataset to be filtered</param>
            <returns><see langword="true"/> if the request should continue, <see langword="false"/> otherwise</returns>
        </member>
        <member name="T:RestModels.Context.ApiContext`2">
            <summary>
                Context for an API request
            </summary>
            <typeparam name="TModel">The type of model being managed by the AP</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
        </member>
        <member name="F:RestModels.Context.ApiContext`2.Scope">
            <summary>
                Gets the service scope for this request
            </summary>
        </member>
        <member name="M:RestModels.Context.ApiContext`2.#ctor(Microsoft.AspNetCore.Http.HttpContext,RestModels.Responses.Response{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Context.ApiContext`2" /> class.
            </summary>
            <param name="httpContext">The current <see cref="P:RestModels.Context.ApiContext`2.HttpContext" /> for this request</param>
            <param name="response">The response for this API call</param>
        </member>
        <member name="P:RestModels.Context.ApiContext`2.HttpContext">
            <summary>
                Gets the current <see cref="P:RestModels.Context.ApiContext`2.HttpContext" /> for this request
            </summary>
        </member>
        <member name="P:RestModels.Context.ApiContext`2.HttpResponse">
            <summary>
                Gets the current HTTP response context. Shortcut to <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Response" />
            </summary>
        </member>
        <member name="P:RestModels.Context.ApiContext`2.Parsed">
            <summary>
                Gets the models that have been parsed by the body parser. This may be null if the body has not been parsed yet or
                there are no body parsers registered for this route.
            </summary>
        </member>
        <member name="P:RestModels.Context.ApiContext`2.Request">
            <summary>
                Gets the current request context. Shortcut to <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Request" />
            </summary>
        </member>
        <member name="P:RestModels.Context.ApiContext`2.Response">
            <summary>
                Gets the response for this API call. If this is null, the model itself will be serialized instead.
            </summary>
        </member>
        <member name="P:RestModels.Context.ApiContext`2.Services">
            <summary>
                Gets a service provider for this API context
            </summary>
        </member>
        <member name="P:RestModels.Context.ApiContext`2.User">
            <summary>
                Gets the authenticated user context for this route. This may be null if authorization has not yet occurred or there
                are no auth providers registered for this route.
            </summary>
        </member>
        <member name="M:RestModels.Context.ApiContext`2.Dispose">
            <summary>
                Disposes the <see cref="T:RestModels.Context.ApiContext`2" />
            </summary>
        </member>
        <member name="T:RestModels.Context.IApiContext`2">
            <summary>
                Context for an API request
            </summary>
            <typeparam name="TModel">The type of model being managed by the AP</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
        </member>
        <member name="P:RestModels.Context.IApiContext`2.HttpContext">
            <summary>
                Gets the current <see cref="P:RestModels.Context.IApiContext`2.HttpContext" /> for this request
            </summary>
        </member>
        <member name="P:RestModels.Context.IApiContext`2.HttpResponse">
            <summary>
                Gets the current HTTP response context. Shortcut to <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Response" />
            </summary>
        </member>
        <member name="P:RestModels.Context.IApiContext`2.Parsed">
            <summary>
                Gets the models that have been parsed by the body parser. This may be null if the body has not been parsed yet or
                there are no body parsers registered for this route.
            </summary>
        </member>
        <member name="P:RestModels.Context.IApiContext`2.Request">
            <summary>
                Gets the current request context. Shortcut to <see cref="P:Microsoft.AspNetCore.Http.HttpContext.Request" />
            </summary>
        </member>
        <member name="P:RestModels.Context.IApiContext`2.Response">
            <summary>
                Gets the response for this API call. If this is null, the model itself will be serialized instead.
            </summary>
        </member>
        <member name="P:RestModels.Context.IApiContext`2.Services">
            <summary>
                Gets a service provider for this API context
            </summary>
        </member>
        <member name="P:RestModels.Context.IApiContext`2.User">
            <summary>
                Gets the authenticated user context for this route. This may be null if authorization has not yet occurred or there
                are no auth providers registered for this route.
            </summary>
        </member>
        <member name="T:RestModels.ExceptionHandlers.AuthFailedExceptionHandler">
            <summary>
                An ExceptionHandler that halts request execution if auth fails
            </summary>
        </member>
        <member name="M:RestModels.ExceptionHandlers.AuthFailedExceptionHandler.HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)">
            <summary>
                Handles API exceptions
            </summary>
            <param name="exception">The exception that was thrown</param>
            <param name="context">The current request context</param>
            <param name="hasNext"><see langword="true"/> if there is another middleware registered for this route, <see langword="false"/> otherwise</param>
            <returns>
                <see langword="true"/> if the request should continue and attempt to use the next middleware registered for this
                route, <see langword="false"/> to halt request execution, <code>null</code> to continue with the next exception handler.
            </returns>
        </member>
        <member name="T:RestModels.ExceptionHandlers.DelegateExceptionHandler">
            <summary>
                Exception handler that uses a delegate to handle the exception
            </summary>
        </member>
        <member name="F:RestModels.ExceptionHandlers.DelegateExceptionHandler.Handler">
            <summary>
                The delegate to use to handle the exception
            </summary>
        </member>
        <member name="M:RestModels.ExceptionHandlers.DelegateExceptionHandler.#ctor(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.ExceptionHandlers.DelegateExceptionHandler" /> class
            </summary>
            <param name="handler">The delegate to use to handle the exception</param>
        </member>
        <member name="M:RestModels.ExceptionHandlers.DelegateExceptionHandler.HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)">
            <summary>
                Handles API exceptions
            </summary>
            <param name="exception">The exception that was thrown</param>
            <param name="context">The current request context</param>
            <param name="hasNext"><see langword="true"/> if there is another middleware registered for this route, <see langword="false"/> otherwise</param>
            <returns>
                <see langword="true"/> if the request should continue and attempt to use the next middleware registered for this
                route, <see langword="false"/> to halt request execution, <code>null</code> to continue with the next exception handler.
            </returns>
        </member>
        <member name="T:RestModels.ExceptionHandlers.IExceptionHandler">
            <summary>
                Handler for API exceptions
            </summary>
        </member>
        <member name="M:RestModels.ExceptionHandlers.IExceptionHandler.HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)">
            <summary>
                Handles API exceptions
            </summary>
            <param name="exception">The exception that was thrown</param>
            <param name="context">The current request context</param>
            <param name="hasNext"><see langword="true"/> if there is another middleware registered for this route, <see langword="false"/> otherwise</param>
            <returns>
                <see langword="true"/> if the request should continue and attempt to use the next middleware registered for this
                route, <see langword="false"/> to halt request execution, <code>null</code> to continue with the next exception handler.
            </returns>
        </member>
        <member name="T:RestModels.ExceptionHandlers.SimpleExceptionHandler">
            <summary>
                An exception handler that writes the message of the exception to the response and returns a 400 status code for
                expected exceptions or 500 for unexpected ones.
            </summary>
        </member>
        <member name="M:RestModels.ExceptionHandlers.SimpleExceptionHandler.HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)">
            <summary>
                Handles API exceptions
            </summary>
            <param name="exception">The exception that was thrown</param>
            <param name="context">The current request context</param>
            <param name="hasNext"><see langword="true"/> if there is another middleware registered for this route, <see langword="false"/> otherwise</param>
            <returns>
                <see langword="true"/> if the request should continue and attempt to use the next middleware registered for this
                route, <see langword="false"/> to halt request execution, <code>null</code> to continue with the next exception handler.
            </returns>
        </member>
        <member name="T:RestModels.Exceptions.ApiException">
            <summary>
                Exception thrown when an API error occurs
            </summary>
            <remarks>
                When this exception is thrown, it indicates that an error occurred processing the request, but that the error
                contains no sensitive data and should be communicated to the API consumer.
            </remarks>
        </member>
        <member name="M:RestModels.Exceptions.ApiException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ApiException" /> class
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.ApiException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ApiException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
        </member>
        <member name="M:RestModels.Exceptions.ApiException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ApiException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
        </member>
        <member name="M:RestModels.Exceptions.ApiException.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ApiException" /> class
            </summary>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="M:RestModels.Exceptions.ApiException.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ApiException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="M:RestModels.Exceptions.ApiException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ApiException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="P:RestModels.Exceptions.ApiException.ErrorCode">
            <summary>
            	Gets or sets a unique code for the error that occurred
            </summary>
        </member>
        <member name="T:RestModels.Exceptions.AuthFailedException">
            <summary>
                Exception thrown when an authentication provider fails to authenticate a request
            </summary>
            <remarks>
                If thrown from an auth provider, this exception indicates that the chosen auth provider was not able to
                authenticate for the given request, but that request execution should
                continue with the next available provider.
                If thrown from middleware, this exception indicates that all auth providers failed and request execution should
                halt.
            </remarks>
        </member>
        <member name="M:RestModels.Exceptions.AuthFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.AuthFailedException" /> class
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.AuthFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.AuthFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
        </member>
        <member name="M:RestModels.Exceptions.AuthFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.AuthFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
        </member>
        <member name="M:RestModels.Exceptions.AuthFailedException.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.AuthFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="M:RestModels.Exceptions.AuthFailedException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.AuthFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="T:RestModels.Exceptions.ConditionFailedException">
            <summary>
                Exception thrown when a condition check has failed, indicating that request execution should halt
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.ConditionFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ConditionFailedException" /> class
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.ConditionFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ConditionFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
        </member>
        <member name="M:RestModels.Exceptions.ConditionFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ConditionFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
        </member>
        <member name="M:RestModels.Exceptions.ConditionFailedException.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ConditionFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="M:RestModels.Exceptions.ConditionFailedException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ConditionFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="T:RestModels.Exceptions.ErrorCodes">
            <summary>
                Constants class of error codes for <see cref="T:RestModels.Exceptions.ApiException" />
            </summary>
        </member>
        <member name="F:RestModels.Exceptions.ErrorCodes.ApiError">
            <summary>
                Generic error code indicating that the request has failed
            </summary>
        </member>
        <member name="F:RestModels.Exceptions.ErrorCodes.AuthFailed">
            <summary>
                Error code indicating that authentication has failed
            </summary>
        </member>
        <member name="F:RestModels.Exceptions.ErrorCodes.ParsingFailed">
            <summary>
                Error code indicating that parsing has failed
            </summary>
        </member>
        <member name="F:RestModels.Exceptions.ErrorCodes.ConditionFailed">
            <summary>
                Error code indicating that a required condition was not met
            </summary>
        </member>
        <member name="F:RestModels.Exceptions.ErrorCodes.OperationFailed">
            <summary>
                Error code indicating that the operation failed
            </summary>
        </member>
        <member name="F:RestModels.Exceptions.ErrorCodes.WritingFailed">
            <summary>
                Error code indicating that writing the API response failed
            </summary>
        </member>
        <member name="F:RestModels.Exceptions.ErrorCodes.Forbidden">
            <summary>
                Error code indicating that authentication succeeded, but the user does not have the required permissions to access this route.
            </summary>
        </member>
        <member name="T:RestModels.Exceptions.OperationFailedException">
            <summary>
                Exception thrown when a create, update, delete, or other operation has failed
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.OperationFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OperationFailedException" /> class
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.OperationFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OperationFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
        </member>
        <member name="M:RestModels.Exceptions.OperationFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OperationFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
        </member>
        <member name="M:RestModels.Exceptions.OperationFailedException.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OperationFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="M:RestModels.Exceptions.OperationFailedException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OperationFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="T:RestModels.Exceptions.OptionsException">
            <summary>
                Exception thrown when an error occurs while building <see cref="T:RestModels.Options.RestModelOptions`2"/>
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.OptionsException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OptionsException" /> class
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.OptionsException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OptionsException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
        </member>
        <member name="M:RestModels.Exceptions.OptionsException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.OptionsException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
        </member>
        <member name="T:RestModels.Exceptions.ParsingFailedException">
            <summary>
                Exception thrown when a parser has failed to parse a request body and request execution should halt
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.ParsingFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ParsingFailedException" /> class
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.ParsingFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ParsingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
        </member>
        <member name="M:RestModels.Exceptions.ParsingFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ParsingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
        </member>
        <member name="M:RestModels.Exceptions.ParsingFailedException.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ParsingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="M:RestModels.Exceptions.ParsingFailedException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.ParsingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="T:RestModels.Exceptions.WritingFailedException">
            <summary>
                Exception thrown when writing a result has failed
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.WritingFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.WritingFailedException" /> class
            </summary>
        </member>
        <member name="M:RestModels.Exceptions.WritingFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.WritingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
        </member>
        <member name="M:RestModels.Exceptions.WritingFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.WritingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
        </member>
        <member name="M:RestModels.Exceptions.WritingFailedException.#ctor(System.String,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.WritingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="M:RestModels.Exceptions.WritingFailedException.#ctor(System.String,System.Exception,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Exceptions.WritingFailedException" /> class
            </summary>
            <param name="message">A message explaining the exception</param>
            <param name="inner">The inner exception that caused this one</param>
            <param name="errorCode">A unique error code for the error that occurred</param>
        </member>
        <member name="T:RestModels.Extensions.RestModelOptionsBuilderExtensions">
            <summary>
                Extension methods for the <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> class.
            </summary>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthBasic``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.Func{System.String,System.String,System.Boolean})">
            <summary>
                Adds an auth provider to this route that authenticates with basic auth
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="handler">
                The handler which, when given the username and password, will return <see langword="true"/> if the value is valid and
                <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthBasic``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.String,System.String)">
            <summary>
                Adds an auth provider to this route that authenticates with basic auth
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="username">
                The expected value of the username. Authorization will succeed if both this and <paramref name="password" /> value
                equals
                the actual values and fail otherwise
            </param>
            <param name="password">
                The expected value of the password. Authorization will succeed if both this and <paramref name="username" /> value
                equals
                the actual values and fail otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthBasicAsync``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.Func{System.String,System.String,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Adds an auth provider to this route that authenticates with basic auth
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="handler">
                The handler which, when given the username and password, will return <see langword="true"/> if the value is valid and
                <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthAsync``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.Func{RestModels.Context.IApiContext{``0,RestModels.Auth.NoUser},System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Adds an auth provider to this route that authenticates with a delegate
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="handler">
                The handler which, when given the API request context, will return <see langword="true"/> if the credentials are valid and
                <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.Auth``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.Func{RestModels.Context.IApiContext{``0,RestModels.Auth.NoUser},System.Boolean})">
            <summary>
                Adds an auth provider to this route that authenticates with a delegate
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="handler">
                The handler which, when given the API request context, will return <see langword="true"/> if the credentials are valid and
                <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthHeader``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.String,System.Func{System.String,System.Boolean})">
            <summary>
                Adds an auth provider to this route that authenticates with a header
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="parameterName">The name of the header to authenticate with</param>
            <param name="handler">
                The handler which, when given the header value, will return <see langword="true"/> if the value is valid and
                <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthHeader``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.String,System.String)">
            <summary>
                Adds an auth provider to this route that authenticates with a header
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="parameterName">The name of the header to authenticate with</param>
            <param name="value">
                The expected value of the parameter. Authorization will succeed if the parameter value equals
                <paramref name="value" /> and fail otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthHeaderAsync``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.String,System.Func{System.String,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Adds an auth provider to this route that authenticates with a header
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="parameterName">The name of the header to authenticate with</param>
            <param name="handler">
                The handler which, when given the header value, will return <see langword="true"/> if the value is valid and
                <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthQuery``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.String,System.Func{System.String,System.Boolean})">
            <summary>
                Adds an auth provider to this route that authenticates with a query parameter
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="parameterName">The name of the parameter to authenticate with</param>
            <param name="handler">
                The handler which, when given the parameter value, will return <see langword="true"/> if the value is valid
                and <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthQuery``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.String,System.String)">
            <summary>
                Adds an auth provider to this route that authenticates with a query parameter
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="parameterName">The name of the parameter to authenticate with</param>
            <param name="value">
                The expected value of the parameter. Authorization will succeed if the parameter value equals
                <paramref name="value" /> and fail otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Extensions.RestModelOptionsBuilderExtensions.AuthQueryAsync``1(RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser},System.String,System.Func{System.String,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Adds an auth provider to this route that authenticates with a query parameter
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <param name="builder">The options builder to perform the operation on</param>
            <param name="parameterName">The name of the parameter to authenticate with</param>
            <param name="handler">
                The handler which, when given the parameter value, will return <see langword="true"/> if the value is valid
                and <see langword="false"/> otherwise
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="T:RestModels.Filters.DelegateFilter`2">
            <summary>
                A dataset filter that uses a delegate to filter
            </summary>
            <typeparam name="TModel">The type of model being filtered</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="F:RestModels.Filters.DelegateFilter`2.FilterDelegate">
            <summary>
                The delegate to use to filter the dataset
            </summary>
        </member>
        <member name="M:RestModels.Filters.DelegateFilter`2.#ctor(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Threading.Tasks.Task{System.Linq.IQueryable{`0}}})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Filters.DelegateFilter`2" /> class.
            </summary>
            <param name="filterDelegate">The delegate to use to filter the dataset</param>
        </member>
        <member name="M:RestModels.Filters.DelegateFilter`2.FilterDataAsync(RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
                Filters the model dataset by some condition
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The current dataset to be filtered</param>
            <returns>The filtered dataset</returns>
        </member>
        <member name="T:RestModels.Filters.IFilter`2">
            <summary>
                Filter for model datasets
            </summary>
            <typeparam name="TModel">The type of model being filtered</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="M:RestModels.Filters.IFilter`2.FilterDataAsync(RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
                Filters the model dataset by some condition
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The current dataset to be filtered</param>
            <returns>The filtered dataset</returns>
        </member>
        <member name="T:RestModels.Filters.IFilter`1">
            <summary>
                Filter for model datasets
            </summary>
            <typeparam name="TModel">The type of model being filtered</typeparam>
        </member>
        <member name="T:RestModels.Filters.ParameterResolver">
            <summary>
                Utility class that parses parameters
            </summary>
        </member>
        <member name="F:RestModels.Filters.ParameterResolver.ParameterMap">
            <summary>
                A map of types to functions that convert that type from a string to an instance
            </summary>
        </member>
        <member name="M:RestModels.Filters.ParameterResolver.ParseParameter(System.String,System.Type)">
            <summary>
                Parses a parameter
            </summary>
            <param name="input">The input received from the HTTP request data</param>
            <param name="keyType">The expected type of the parameter</param>
            <returns>The parsed primary key</returns>
            <exception cref="T:System.ArgumentException">
                If the type is not one of the types int, long, float, double, Guid, decimal,
                DateTime, string, or bool
            </exception>
        </member>
        <member name="T:RestModels.Middleware.RestModelMiddleware`2">
            <summary>
                Middleware for RestModels.
                It's not traditional ASP.NET Core middleware, but it's essentially the same thing
            </summary>
            <typeparam name="TModel">The type of model being handled by this middleware</typeparam>
            <typeparam name="TUser">The type of authenticated user context, if any</typeparam>
        </member>
        <member name="F:RestModels.Middleware.RestModelMiddleware`2.Options">
            <summary>
                The options to use for determining the route actions
            </summary>
        </member>
        <member name="M:RestModels.Middleware.RestModelMiddleware`2.#ctor(RestModels.Options.RestModelOptions{`0,`1})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Middleware.RestModelMiddleware`2" /> class
            </summary>
            <param name="options">The options to use for determining the route actions</param>
        </member>
        <member name="M:RestModels.Middleware.RestModelMiddleware`2.TryHandleRequest(Microsoft.AspNetCore.Http.HttpContext,System.Boolean)">
            <summary>
                Handles an incoming request
            </summary>
            <param name="context">The http context of the current request</param>
            <param name="hasNext"><see langword="true"/> if this route has another middleware registered to fall back on, <see langword="false"/> otherwise</param>
            <returns><see langword="true"/> to attempt to use the next request handler, <see langword="false"/> to finish request execution here</returns>
        </member>
        <member name="M:RestModels.Middleware.RestModelMiddleware`2.Authenticate(RestModels.Context.ApiContext{`0,`1})">
            <summary>
                Authenticates the request using the auth providers specified by this middleware's options, if any
            </summary>
            <param name="context">The current api context</param>
            <returns>The authenticated user context, or null if there is none</returns>
            <exception cref="T:RestModels.Exceptions.AuthFailedException">If none of the available authentication methods succeeded</exception>
        </member>
        <member name="M:RestModels.Middleware.RestModelMiddleware`2.HandleRequest(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                Handles an incoming request
            </summary>
            <param name="context">The http context of the current request</param>
            <returns>When the request is completed</returns>
        </member>
        <member name="M:RestModels.Middleware.RestModelMiddleware`2.ParseBody(RestModels.Context.ApiContext{`0,`1})">
            <summary>
                Parses the request body using the body parsers specified by this middleware's options, if any
            </summary>
            <param name="context">The current api context</param>
            <returns>The parsed model, or null if there are no body parsers specified</returns>
            <exception cref="!:InvalidParserException">If none of the available parsers can properly parse the request</exception>
        </member>
        <member name="M:RestModels.Middleware.RestModelMiddleware`2.VerifyConditions(RestModels.Context.ApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
                Verifies that all the conditions provided in the options are met for a given request
            </summary>
            <param name="context">The current api context</param>
            <param name="dataset">The dataset to verify conditions for</param>
            <returns>When all conditions have passed</returns>
            <exception cref="T:RestModels.Exceptions.ConditionFailedException">If any conditions fail</exception>
        </member>
        <member name="T:RestModels.Models.IModelProvider`2">
            <summary>
                Provider for API models
            </summary>
            <typeparam name="TModel">The type of model being queried for</typeparam>
            <typeparam name="TUser">The type of authenticated user</typeparam>
        </member>
        <member name="M:RestModels.Models.IModelProvider`2.GetModelsAsync(RestModels.Context.IApiContext{`0,`1})">
            <summary>
                Gets a query pointing to all of the models available for the current request context
            </summary>
            <param name="context">The current API context</param>
            <returns>An <see cref="T:System.Linq.IQueryable`1" /> of all of the models available</returns>
        </member>
        <member name="T:RestModels.Models.IModelProvider`1">
            <summary>
                Provider for API models
            </summary>
            <typeparam name="TModel">The type of model being queried for</typeparam>
        </member>
        <member name="T:RestModels.Operations.IOperation`2">
            <summary>
                Operation on model datasets, like create, update, or delete.
            </summary>
            <typeparam name="TModel">The type of model being operated on</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
        </member>
        <member name="M:RestModels.Operations.IOperation`2.OperateAsync(RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0})">
            <summary>
               Performs some action on a model dataset and returns the models that were affected
            </summary>
            <param name="context">The current API context</param>
            <param name="dataset">The filtered dataset to operate on</param>
            <returns>The affected models</returns>
        </member>
        <member name="T:RestModels.Operations.IOperation`1">
            <summary>
                Operation on model datasets, like create, update, or delete.
            </summary>
            <typeparam name="TModel">The type of model being operated on</typeparam>
        </member>
        <member name="T:RestModels.Options.Builder.RestModelOptionsBuilder`2">
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
            <summary>
                Builder for <see cref="T:RestModels.Options.RestModelOptions`2" />
            </summary>
            <typeparam name="TModel">The model type that the API is being built for</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.After(System.Action{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0}})">
            <summary>
                Adds a post-operation action to this route that will run after the operation is executed
            </summary>
            <param name="handler">
                The action to run after the operation, which will be passed the current API context and operation
                result
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
            <remarks>
                This action will be run after every operation and can be used to log data, notify other parts of the app, or modify
                the HTTP response
                <para>
                    Note that if you would like to omit/include properties from the API response or set response parameters, use
                    the
                    <see
                        cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Omit(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />
                    , <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />, and
                    <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue(System.String,System.Object)" /> methods respectively.
                </para>
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AfterAsync(System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.Threading.Tasks.Task})">
            <summary>
                Adds a post-operation action to this route that will run after the operation is executed
            </summary>
            <param name="handler">
                The action to run after the operation, which will be passed the current API context and operation
                result
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
            <remarks>
                This action will be run after every operation and can be used to log data, notify other parts of the app, or modify
                the HTTP response
                <para>
                    Note that if you would like to omit/include properties from the API response or set response parameters, use
                    the <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Omit(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />,
                    <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />, and
                    <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue(System.String,System.Object)" /> methods respectively.
                </para>
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Before(System.Action{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0}})">
            <summary>
                Adds a pre-operation action to this route that will run before the operation is executed
            </summary>
            <param name="handler">
                The action to run before the operation, which will be passed the current API context and model
                dataset
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.BeforeAsync(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Threading.Tasks.Task})">
            <summary>
                Adds a pre-operation action to this route that will run before the operation is executed
            </summary>
            <param name="handler">
                The action to run before the operation, which will be passed the current API context and model
                dataset
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValueAsync``1(System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.Threading.Tasks.Task{System.Object}})">
            <summary>
                Sets a response value for this request using an asynchronous handler. The response value to set is determined by
                the given attribute type
            </summary>
            <typeparam name="TAttribute">The type of attribute on the property to set the response value of</typeparam>
            <param name="handler">
                The delegate which will return what to set the value of the property defined by the
                <typeparamref name="TAttribute" /> attribute
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue``1(System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.Object})">
            <summary>
                Sets a response value for this request using a synchronous handler. The response value to set is determined by the
                given attribute type
            </summary>
            <typeparam name="TAttribute">The type of attribute on the property to set the response value of</typeparam>
            <param name="handler">
                The delegate which will return what to set the value of the property defined by the
                <typeparamref name="TAttribute" /> attribute
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue``1(System.Object)">
            <summary>
                Sets a response value for this request to a predefined value. The response value to set is determined by the given
                attribute type
            </summary>
            <typeparam name="TAttribute">The type of attribute on the property to set the response value of</typeparam>
            <param name="value">The value to set on the property defined by the <typeparamref name="TAttribute" /> attribute</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValueAsync(System.String,System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.Threading.Tasks.Task{System.Object}})">
            <summary>
                Sets a response value for this request using an asynchronous handler. The response value to set is determined by
                the given attribute type
            </summary>
            <param name="name">The name of the response value to set</param>
            <param name="handler">
                The delegate which will return what to set the value of the property defined by
                <paramref name="name" />
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue(System.String,System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.Object})">
            <summary>
                Sets a response value for this request using a synchronous handler. The response value to set is determined by the
                given attribute type
            </summary>
            <param name="name">The name of the response value to set</param>
            <param name="handler">
                The delegate which will return what to set the value of the property defined by
                <paramref name="name" />
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue(System.String,System.Object)">
            <summary>
                Sets a response value for this request to a predefined value. The response value to set is determined by the given
                attribute type
            </summary>
            <param name="name">The name of the response value to set</param>
            <param name="value">The value to set on the property defined by <paramref name="name" /></param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseCount">
            <summary>
                Sets the response value defined by the <see cref="T:RestModels.Responses.Attributes.ModelCountAttribute" /> to the size of the resulting dataset
                after the operation, if any.
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteVersionValue(System.String)">
            <summary>
                Sets the response value defined by the <see cref="T:RestModels.Responses.Attributes.ApiVersionAttribute" /> to the current API version.
            </summary>
            <param name="version">The current API version</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteVersionHeader(System.String)">
            <summary>
                Sets the response header X-Api-Version to the current API version.
            </summary>
            <param name="version">The current API version</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteVersion(System.String)">
            <summary>
                Sets the response value defined by the <see cref="T:RestModels.Responses.Attributes.ApiVersionAttribute" /> and the X-Api-Version header to the
                current API version.
            </summary>
            <param name="version">The current API version</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Deprecate(System.String)">
            <summary>
                Sets the response value defined by the <see cref="T:RestModels.Responses.Attributes.DeprecationNoticeAttribute" /> to the given deprecation message,
                or a boilerplate one if none is specified.
            </summary>
            <param name="message">The deprecation message to display to API consumers</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetHeaderAsync(System.String,System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.Threading.Tasks.Task{System.String}})">
            <summary>
                Sets a response header for this request using an asynchronous handler.
            </summary>
            <param name="name">The name of the header to set</param>
            <param name="handler">The delegate which will return the value to set the header to</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetHeader(System.String,System.Func{RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},System.String})">
            <summary>
                Sets a response header for this request using a synchronous handler.
            </summary>
            <param name="name">The name of the response value to set</param>
            <param name="handler">The delegate which will return the value to set the header to</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetHeader(System.String,System.String)">
            <summary>
                Sets a response header for this request to a predefined value.
            </summary>
            <param name="name">The name of the response value to set</param>
            <param name="value">The value to set for the header</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueAsync(System.Reflection.PropertyInfo,System.Func{RestModels.Context.IApiContext{`0,`1},System.Threading.Tasks.Task{System.Object}})">
            <summary>
                Sets a value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="valueGetter">A handler to use to get the value when requested</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValue(System.Reflection.PropertyInfo,System.Func{RestModels.Context.IApiContext{`0,`1},System.Object})">
            <summary>
                Sets a value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="valueGetter">A handler to use to get the value when requested</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValue(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{RestModels.Context.IApiContext{`0,`1},System.Object})">
            <summary>
                Sets a value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="valueGetter">A handler to use to get the value when requested</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Func{RestModels.Context.IApiContext{`0,`1},System.Threading.Tasks.Task{System.Object}})">
            <summary>
                Sets a value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="valueGetter">A handler to use to get the value when requested</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValue(System.Reflection.PropertyInfo,RestModels.ParameterRetrievers.ParameterRetriever)">
            <summary>
                Sets a value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="retriever">A parameter retriever to use to get the value for a request</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValue(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever)">
            <summary>
                Sets a value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="retriever">A parameter retriever to use to get the value for a request</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueQuery(System.Reflection.PropertyInfo,System.String)">
            <summary>
                Sets a value obtained from a query parameter on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="parameterName">The name of the query parameter whose value <paramref name="property" /> will be set to</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueQuery(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
                Sets a value obtained from a query parameter on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="parameterName">The name of the query parameter whose value <paramref name="property" /> will be set to</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueRoute(System.Reflection.PropertyInfo,System.String)">
            <summary>
                Sets a value obtained from a route value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="parameterName">The name of the route value whose value <paramref name="property" /> will be set to</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueRoute(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
                Sets a value obtained from a route value on parsed models before the operation occurs.
            </summary>
            <param name="property">The property to set the value on</param>
            <param name="parameterName">The name of the route value whose value <paramref name="property" /> will be set to</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueRoute(System.Reflection.PropertyInfo)">
            <summary>
                Sets a value obtained from a route value on parsed models before the operation occurs. The name of the route value is inferred from the property name.
            </summary>
            <param name="property">The property to set the value on</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueRoute(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Sets a value obtained from a route value on parsed models before the operation occurs. The name of the route value is inferred from the property name.
            </summary>
            <param name="property">The property to set the value on</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueQuery(System.Reflection.PropertyInfo)">
            <summary>
                Sets a value obtained from a query parameter on parsed models before the operation occurs. The name of the route value is inferred from camelCasing the property name.
            </summary>
            <param name="property">The property to set the value on</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetValueQuery(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Sets a value obtained from a query parameter on parsed models before the operation occurs. The name of the route value is inferred from camelCasing the property name.
            </summary>
            <param name="property">The property to set the value on</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthAspNetIdentity(System.String,System.String[])">
            <summary>
                Adds an auth provider to this route that authenticates with ASP.NET Core's Identity system
            </summary>
            <param name="policy">The policy that the user must fulfill for auth to succeed</param>
            <param name="roles">The roles that the user must be in for auth to succeed</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthAspNetIdentity">
            <summary>
                Adds an auth provider to this route that authenticates with ASP.NET Core's Identity system
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthAspNetIdentityRole(System.String[])">
            <summary>
                Adds an auth provider to this route that authenticates with ASP.NET Core's Identity system, requiring that the user
                fulfill certain roles for auth to succeed
            </summary>
            <param name="roles">The roles that the user must be in for auth to succeed</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthBasic(System.Func{System.String,System.String,`1})">
            <summary>
                Adds an auth provider to this route that authenticates with basic auth
            </summary>
            <param name="handler">
                The handler which, when given the username and password, will return a user context or throw if
                the value is invalid
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthBasicAsync(System.Func{System.String,System.String,System.Threading.Tasks.Task{`1}})">
            <summary>
                Adds an auth provider to this route that authenticates with basic auth
            </summary>
            <param name="handler">
                The handler which, when given the username and password, will return a user context or throw if
                the value is invalid
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthHeader(System.String,System.Func{System.String,`1})">
            <summary>
                Adds an auth provider to this route that authenticates with a header value
            </summary>
            <param name="headerName">The name of the header to authenticate with</param>
            <param name="handler">
                The handler which, when given the header value, will return a user context or throw if the value
                is invalid
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthHeaderAsync(System.String,System.Func{System.String,System.Threading.Tasks.Task{`1}})">
            <summary>
                Adds an auth provider to this route that authenticates with a header value
            </summary>
            <param name="headerName">The name of the header to authenticate with</param>
            <param name="handler">
                The handler which, when given the header value, will return a user context or throw if the value
                is invalid
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthQuery(System.String,System.Func{System.String,`1})">
            <summary>
                Adds an auth provider to this route that authenticates with a query parameter
            </summary>
            <param name="parameterName">The name of the parameter to authenticate with</param>
            <param name="handler">
                The handler which, when given the parameter value, will return a user context or throw if the
                value is invalid
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthQueryAsync(System.String,System.Func{System.String,System.Threading.Tasks.Task{`1}})">
            <summary>
                Adds an auth provider to this route that authenticates with a query parameter
            </summary>
            <param name="parameterName">The name of the parameter to authenticate with</param>
            <param name="handler">
                The handler which, when given the parameter value, will return a user context or throw if the
                value is invalid
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AuthAsync(System.Func{RestModels.Context.IApiContext{`0,`1},System.Threading.Tasks.Task{`1}})">
            <summary>
                Adds an auth provider to this route that authenticates using a delegate
            </summary>=
            <param name="handler">
                The handler which, when given the API request context, will return a user context or throw if authentication fails
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Auth(System.Func{RestModels.Context.IApiContext{`0,`1},`1})">
            <summary>
                Adds an auth provider to this route that authenticates using a delegate
            </summary>=
            <param name="handler">
                The handler which, when given the API request context, will return a user context or throw if authentication fails
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseJson">
            <summary>
                Sets this route up to parse JSON request bodies
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
                Sets this route up to parse JSON request bodies
            </summary>
            <param name="options">The options for the JSON deserializer</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseJsonArrays">
            <summary>
                Sets this route up to parse JSON request bodies as a single object or an array
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseJsonArrays(System.Text.Json.JsonSerializerOptions)">
            <summary>
                Sets this route up to parse JSON request bodies as a single object or an array
            </summary>
            <param name="options">The options for the JSON deserializer</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseXml">
            <summary>
                Sets this route up to parse XML request bodies
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseXmlAndJson(System.Boolean)">
            <summary>
                Sets this route up to parse XML and JSON request bodies
            </summary>
            <param name="keepExisting">True to keep existing parsers, false otherwise</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseXmlAndJsonArrays">
            <summary>
                Sets this route up to parse XML and JSON request bodies as a single object or an array
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ParseXmlArrays">
            <summary>
                Sets this route up to parse XML request bodies as a single object or an array
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Require(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Boolean})">
            <summary>
                Adds a requirement to this route that will ensure the request meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the request meets a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Require(System.Func{System.Linq.IQueryable{`0},System.Boolean})">
            <summary>
                Adds a requirement to this route that will ensure the request meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the request meets a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireAll(System.Func{`0,System.Boolean})">
            <summary>
                Adds a requirement to this route that will ensure that every element in the dataset meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the dataset's elements meet a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireInput(System.Func{`0[],System.Boolean})">
            <summary>
                Adds a requirement to this route that will ensure the parsed body meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the parsed body meets a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireAllInput(System.Func{`0,System.Boolean})">
            <summary>
                Adds a requirement to this route that will ensure the parsed body meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the parsed body meets a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireInputAsync(System.Func{`0[],System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Adds a requirement to this route that will ensure the parsed body meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the parsed body meets a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireAsync(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Adds a requirement to this route that will ensure the request meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the request meets a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireAsync(System.Func{System.Linq.IQueryable{`0},System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
                Adds a requirement to this route that will ensure the request meets the given condition
            </summary>
            <param name="condition">The delegate to use to determine if the request meets a condition</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireAtLeast(System.Int32)">
            <summary>
                Ensures that there are at least a certain number of elements in the dataset
            </summary>
            <param name="count">The number of elements that should be in the dataset at a minimum</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireExactly(System.Int32)">
            <summary>
                Ensures that there are exactly a certain number of elements in the dataset
            </summary>
            <param name="count">The number of elements that should be in the dataset</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireInputHasAtLeast(System.Int32)">
            <summary>
                Ensures that there are at least a certain number of elements in the parsed body
            </summary>
            <param name="count">The number of elements that should be in the dataset at a minimum</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireInputHasExactly(System.Int32)">
            <summary>
                Ensures that there are exactly a certain number of elements in the parsed dataset
            </summary>
            <param name="count">The number of elements that should be in the dataset</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireExactlyOne">
            <summary>
                Ensures that there is exactly one element in the dataset
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireNonEmpty">
            <summary>
                Ensures that there is at least one element in the dataset
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireExactlyOneInput">
            <summary>
                Ensures that there is exactly one element in the parsed body
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireNonEmptyInput">
            <summary>
                Ensures that there is at least one element in the parsed body
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="F:RestModels.Options.Builder.RestModelOptionsBuilder`2.Children">
            <summary>
                The children options being built off of this one
            </summary>
        </member>
        <member name="F:RestModels.Options.Builder.RestModelOptionsBuilder`2.Options">
            <summary>
                The options object that's being built
            </summary>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.#ctor(RestModels.Options.RestModelOptions{`0,`1})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> class.
            </summary>
            <param name="existing">Starting options for this builder</param>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.#ctor(System.String,System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> class.
            </summary>
            <param name="baseRoute">The base route for these options</param>
            <param name="routeOptionsHandler">ASP.NET core specific route options</param>
        </member>
        <member name="P:RestModels.Options.Builder.RestModelOptionsBuilder`2.RoutePattern">
            <summary>
                The route pattern for this builder
            </summary>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AcceptArrays(System.Boolean)">
            <summary>
                Sets whether or not to accept arrays of <typeparamref name="TModel" /> as the request body
            </summary>
            <param name="accept">A value indicating whether or not to accept arrays as the request body</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddAuthProvider(RestModels.Auth.IAuthProvider{`0,`1})">
            <summary>
                Adds an auth provider to this route
            </summary>
            <param name="authProvider">The auth provider to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddAuthProvider``1">
            <summary>
                Adds an auth provider to this route
            </summary>
            <typeparam name="TProvider">The type of auth provider to add</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddBodyParser(RestModels.Parsers.IBodyParser{`0})">
            <summary>
                Adds a body parser to this route
            </summary>
            <param name="bodyParser">The body parser to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddPreOpAction(RestModels.Actions.IPreOpAction{`0,`1})">
            <summary>
                Adds a pre-operation action to this route
            </summary>
            <param name="action">The pre-op action to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddPreOpAction``1">
            <summary>
                Adds a pre-operation action to this route
            </summary>
            <typeparam name="TAction">The type of pre-op action to add</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddPostOpAction``1">
            <summary>
                Adds a post-operation action to this route
            </summary>
            <typeparam name="TAction">The type of post-op action to add</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
            <remarks>
            	This action will be run after every operation and can be used to log data, notify other parts of the app, or modify the HTTP response
            	<para>
            		Note that if you would like to omit/include properties from the API response or set response parameters, use the <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Omit(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />, <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />, and <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue(System.String,System.Object)" /> methods respectively.
            	</para>
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddPostOpAction(RestModels.Actions.IPostOpAction{`0,`1})">
            <summary>
                Adds a post-operation action to this route
            </summary>
            <param name="action">The post-op action to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
            <remarks>
            	This action will be run after every operation and can be used to log data, notify other parts of the app, or modify the HTTP response
            	<para>
            		Note that if you would like to omit/include properties from the API response or set response parameters, use the <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Omit(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />, <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />, and <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteResponseValue(System.String,System.Object)" /> methods respectively.
            	</para>
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddBodyParser``1">
            <summary>
                Adds a new body parser to this route
            </summary>
            <typeparam name="TParser">The type of body parser to add</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddCondition(RestModels.Conditions.ICondition{`0,`1})">
            <summary>
                Adds a condition to this route, which much be met for the request to succeed
            </summary>
            <param name="condition">The condition to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddFilter(RestModels.Filters.IFilter{`0,`1})">
            <summary>
                Adds a filter to this route, which will filter the dataset retrieved
            </summary>
            <param name="filter">The filter to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddRequestMethod(System.String)">
            <summary>
                Adds a request method that this route supports
            </summary>
            <param name="requestMethod">The request method to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.BuildAll">
            <summary>
                Builds these options and all of this builder's child options. Not intended for application use.
            </summary>
            <returns>
                A list of all of the options created by this builder, including its own, in the order they were added, keyed
                to the route it's for
            </returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearAuthProviders">
            <summary>
                Clears all of the auth providers registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearPreOpActions">
            <summary>
                Clears all of the pre-operation actions registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearPostOpActions">
            <summary>
                Clears all of the post-operation actions registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearBodyParsers">
            <summary>
                Clears all of the body parsers registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearConditions">
            <summary>
                Clears all of the conditions registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearExceptionHandlers">
            <summary>
                Clears all of the exception handlers registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearFilters">
            <summary>
                Clears all of the filters registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearOperation">
            <summary>
                Clears the operation registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearRequestMethods">
            <summary>
                Clears all of the request methods registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ClearResultWriter">
            <summary>
                Clears the result writer registered for this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CreateChild(RestModels.Options.RestModelOptions{`0,`1})">
            <summary>
                Creates a child instance of the <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> type sharing the given base
                options. When overriden in a derived class, this method can be used to ensure that the entire tree of
                <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> objects share the same derived type
            </summary>
            <param name="baseOptions">The base options for the new instance</param>
            <returns>The new <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> instance</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Default``1(System.Reflection.PropertyInfo,System.Func{``0})">
            <summary>
                Sets a default value for a property of the <typeparamref name="TModel" /> parsed from the request body
            </summary>
            <param name="property">The property to set the default for</param>
            <param name="defaultValue">
                A delegate that will retrieve the default value for the given <paramref name="property" />
            </param>
            <typeparam name="TProperty">The type of the property for to set the default for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Default``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Func{``0})">
            <summary>
                Sets a default value for a property of the <typeparamref name="TModel" /> parsed from the request body
            </summary>
            <param name="propertyExpression">An expression that returns the property to set a default for</param>
            <param name="defaultValue">
                A delegate that will retrieve the default value for the property defined by
                <paramref name="propertyExpression" />
            </param>
            <typeparam name="TProperty">The type of the property for to set the default for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Default``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},``0)">
            <summary>
                Sets a default value for a property of the <typeparamref name="TModel" /> parsed from the request body
            </summary>
            <param name="propertyExpression">An expression that returns the property to set a default for</param>
            <param name="defaultValue">The default value for the property defined by <paramref name="propertyExpression" /></param>
            <typeparam name="TProperty">The type of the property for to set the default for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FlatMap">
            <summary>
                Maps another route to the same route pattern
            </summary>
            <returns>The new <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object</returns>
            <remarks>
                This method works just like
                <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})" />
                , but returns the newly created <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />, rather than the one used to
                create the route.
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FlatMap(System.String)">
            <summary>
                Maps a route to a route pattern
            </summary>
            <param name="pattern">The pattern to match with</param>
            <returns>The new <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object</returns>
            <remarks>
                This method works just like
                <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})" />
                , but returns the newly created <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />, rather than the one used to
                create the route.
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FlatMap(System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})">
            <summary>
                Maps another route to the same route pattern
            </summary>
            <param name="routeOptionsHandler">ASP.NET core specific route options</param>
            <returns>The new <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object</returns>
            <remarks>
                This method works just like
                <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})" />
                , but returns the newly created <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />, rather than the one used to
                create the route.
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FlatMap(System.String,System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})">
            <summary>
                Maps a route to a route pattern
            </summary>
            <param name="pattern">The pattern to match with</param>
            <param name="routeOptionsHandler">ASP.NET core specific route options</param>
            <returns>The new <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object</returns>
            <remarks>
                This method works just like
                <see cref="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})" />
                , but returns the newly created <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />, rather than the one used to
                create the route.
            </remarks>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Ensures that a property of the <typeparamref name="TModel" /> will not be parsed from the request body
            </summary>
            <param name="propertyExpression">An expression that returns the property to be ignored</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Ignore(System.Reflection.PropertyInfo)">
            <summary>
                Ensures that a property of the <typeparamref name="TModel" /> will not be parsed from the request body
            </summary>
            <param name="property">The property to be ignored</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.IgnoreAll">
            <summary>
                Ensures that all properties of the <typeparamref name="TModel" /> will not be parsed from the request body
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Include(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Ensures that a property of the <typeparamref name="TModel" /> will be included in the response body
            </summary>
            <param name="propertyExpression">An expression that returns the property to be included</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Include(System.Reflection.PropertyInfo)">
            <summary>
                Ensures that a property of the <typeparamref name="TModel" /> will be included in the response body
            </summary>
            <param name="property">The property to be ignored</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.IncludeAll">
            <summary>
                Ensures that all properties of the <typeparamref name="TModel" /> will be included in the response body
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Maps a route to a route pattern
            </summary>
            <param name="pattern">The pattern to match with</param>
            <param name="optionsHandler">The options for this route</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Maps another route to the same route pattern
            </summary>
            <param name="optionsHandler">The options for this route</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})">
            <summary>
                Maps another route to the same route pattern
            </summary>
            <param name="optionsHandler">The options for this route</param>
            <param name="routeOptionsHandler">ASP.NET core specific route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.MapRoute(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})">
            <summary>
                Maps a route to a route pattern
            </summary>
            <param name="pattern">The pattern to match with</param>
            <param name="optionsHandler">The options for this route</param>
            <param name="routeOptionsHandler">ASP.NET core specific route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Omit(System.Reflection.PropertyInfo)">
            <summary>
                Ensures that a property of the <typeparamref name="TModel" /> will not be included in the response body
            </summary>
            <param name="property">The property to be omitted</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Omit(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Ensures that a property of the <typeparamref name="TModel" /> will not be included in the response body
            </summary>
            <param name="propertyExpression">An expression that returns the property to be omitted</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.OmitAll">
            <summary>
                Ensures that no properties of the <typeparamref name="TModel" /> will be included in the response body
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Optional(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Makes a property of the <typeparamref name="TModel" /> optional in the request body
            </summary>
            <param name="propertyExpression">An expression that returns the property to make optional</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Optional(System.Reflection.PropertyInfo)">
            <summary>
                Makes a property of the <typeparamref name="TModel" /> optional in the request body
            </summary>
            <param name="property">The property to make optional</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireAllProperties">
            <summary>
                Requires all properties of the <typeparamref name="TModel" /> to be present in the request body
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Requires a property of the <typeparamref name="TModel" /> to be present in the request body
            </summary>
            <param name="propertyExpression">An expression that returns the property to require</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.RequireProperty(System.Reflection.PropertyInfo)">
            <summary>
                Requires a property of the <typeparamref name="TModel" /> to be present in the request body
            </summary>
            <param name="property">The property to require</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Reset">
            <summary>
                Resets this <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" />, clearing all lists and resetting all values
                except for the route pattern
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.StripArrayIfSingleResult(System.Boolean)">
            <summary>
                Sets whether or not to write the result as a <typeparamref name="TModel" /> instead of as a collection of
                <typeparamref name="TModel" /> if there is only a single element in the result array
            </summary>
            <param name="strip">
                A value indicating whether or not to strip the array from a result body if there is only a single
                element in the result array
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.UseModelProvider(RestModels.Models.IModelProvider{`0,`1})">
            <summary>
                Sets the model provider to use for this route
            </summary>
            <param name="modelProvider">The model provider to use</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.UseOperation(RestModels.Operations.IOperation{`0,`1})">
            <summary>
                Sets the operation to use for this route, like create, update, or delete
            </summary>
            <param name="operation">The operation to use</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.UseResultWriter(RestModels.Results.IResultWriter{`0,`1})">
            <summary>
                Sets the result writer to use for this route
            </summary>
            <param name="resultWriter">The result writer to use</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.UseResultWriter``1">
            <summary>
                Sets the result writer to use for this route
            </summary>
            <typeparam name="TWriter">The type of result writer to use</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WrapResponse``1">
            <summary>
                Wraps all API responses in an instance of the given type
            </summary>
            <typeparam name="TResponse">The type of the response wrapper</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WrapResponse">
            <summary>
                Wraps all API responses in an instance of <see cref="T:RestModels.Responses.BasicResponse`1"/>
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.ExtractProperty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Extracts a property from an expression
            </summary>
            <param name="propertyExpression">The expression that refers to a property</param>
            <typeparam name="TProperty">The type of the property to extract</typeparam>
            <returns>The extracted property</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FixRoute(System.String)">
            <summary>
                Fixes a route string provided through user input
            </summary>
            <param name="routeString">The inputted route string</param>
            <returns>The route string, ensuring that it ends with a / and starts with a letter</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CamelCase(System.String)">
            <summary>
            	camelCases a string
            </summary>
            <param name="str">The string to camelCase</param>
            <returns>The string in camelCase format</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddExceptionHandler(RestModels.ExceptionHandlers.IExceptionHandler)">
            <summary>
                Adds an exception handler to this route
            </summary>
            <param name="exceptionHandler">The exception handler to add</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.AddExceptionHandler``1">
            <summary>
                Adds an exception handler to this route
            </summary>
            <typeparam name="THandler">The type of exception handler to add</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchExceptions">
            <summary>
                Sets this route up to catch exceptions, writing the exception message to the response body
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FailOnInvalidAuth">
            <summary>
                Sets this route up to halt request execution if authentication fails
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch``1(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Nullable{System.Boolean}})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch``1(System.Action{System.Exception,Microsoft.AspNetCore.Http.HttpContext})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch``1(RestModels.ExceptionHandlers.IExceptionHandler)">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <param name="handler">
                The exception handler that can handle exceptions of type <typeparamref name="TException" />
            </param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Nullable{System.Boolean}})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch(System.Action{System.Exception,Microsoft.AspNetCore.Http.HttpContext})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch``1(System.Func{System.Exception,System.Nullable{System.Boolean}})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch``1(System.Action{System.Exception})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch(System.Func{System.Exception,System.Nullable{System.Boolean}})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Catch(System.Action{System.Exception})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync``1(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync``1(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync``1(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Threading.Tasks.Task})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Threading.Tasks.Task})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync``1(System.Func{System.Exception,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync``1(System.Func{System.Exception,System.Threading.Tasks.Task})">
            <summary>
                Adds an exception handler to this route that handles a specific type of exception
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync(System.Func{System.Exception,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CatchAsync(System.Func{System.Exception,System.Threading.Tasks.Task})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FilterAsync(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Threading.Tasks.Task{System.Linq.IQueryable{`0}}})">
            <summary>
                Adds a filter to this route that will filter the dataset to operate on using the given delegate
            </summary>
            <param name="filter">The delegate to use to filter results</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Filter(System.Func{RestModels.Context.IApiContext{`0,`1},System.Linq.IQueryable{`0},System.Linq.IQueryable{`0}})">
            <summary>
                Adds a filter to this route that will filter the dataset to operate on using the given delegate
            </summary>
            <param name="filter">The delegate to use to filter results</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FilterAsync(System.Func{System.Linq.IQueryable{`0},System.Threading.Tasks.Task{System.Linq.IQueryable{`0}}})">
            <summary>
                Adds a filter to this route that will filter the dataset to operate on using the given delegate
            </summary>
            <param name="filter">The delegate to use to filter results</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Filter(System.Func{System.Linq.IQueryable{`0},System.Linq.IQueryable{`0}})">
            <summary>
                Adds a filter to this route that will filter the dataset to operate on using the given delegate
            </summary>
            <param name="filter">The delegate to use to filter results</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Skip(System.Int32)">
            <summary>
            	Skips over a given number of elements in the dataset
            </summary>
            <param name="count">The number of elements in the dataset to skip over</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Limit(System.Int32)">
            <summary>
                Limits this route's dataset to a certain number of elements
            </summary>
            <param name="count">The number of elements to limit the result to</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.LimitQuery(System.String)">
            <summary>
                Limits this route's dataset to a certain number of elements, as determined by a query parameter
            </summary>
            <param name="paramName">The name of the query parameter that determines the number of elements in the dataset</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SkipQuery(System.String,System.Int32)">
            <summary>
                Skips a certain number of elements in this route's dataset, as determined by a query parameter
            </summary>
            <param name="paramName">The name of the query parameter that determines the number of elements in the dataset to skip</param>
            <param name="multiplier">The number to multiply the value of <paramref name="paramName"/> by before skipping, for pagination</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Paginate">
            <summary>
            	Enables one-indexed pagination of the API output using the "page" and "count" query parameters with infinite maximum page sizes
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Paginate(System.String,System.String)">
            <summary>
                Enables one-indexed pagination of the API output with infinite maximum page sizes
            </summary>
            <param name="pageParamName">The name of the parameter that defines what page to return, starting from zero</param>
            <param name="countParamName">The name of the parameter that defines how many elements to return</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Paginate(System.String,System.String,System.Int32)">
            <summary>
                Enables one-indexed pagination of the API output
            </summary>
            <param name="pageParamName">The name of the parameter that defines what page to return, starting from zero</param>
            <param name="countParamName">The name of the parameter that defines how many elements to return</param>
            <param name="maxPageSize">The maximum number of elements to return in a page</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Paginate(System.String,System.Int32)">
            <summary>
                Enables zero-indexed pagination of the API output
            </summary>
            <param name="pageParamName">The name of the query parameter that defines what page to return</param>
            <param name="pageSize">The number of elements to include in each page</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.LimitQuery(System.String,System.Int32)">
            <summary>
                Limits this route's dataset to a certain number of elements, as determined by a query parameter
            </summary>
            <param name="paramName">The name of the query parameter that determines the number of elements in the dataset</param>
            <param name="max">The maximum number of elements to return</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.LimitOne">
            <summary>
                Limits this route's dataset to only one element
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.First">
            <summary>
                Limits this route's dataset to only the first element, throwing if there are no elements in the set
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FilterByRouteEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
                Filters this route's dataset by a route parameter value
            </summary>
            <param name="property">An expression getting the property to filter for</param>
            <param name="routeParameterName">The name of the route parameter whose value to compare with the value of <paramref name="property"/> on the dataset's <typeparamref name="TModel"/> objects</param>
            <typeparam name="T">The type of the parameter to filter with</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FilterByQueryEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
                Filters this route's dataset by a query parameter value
            </summary>
            <param name="property">An expression getting the property to filter for</param>
            <param name="queryParameterName">The name of the query parameter whose value to compare with the value of <paramref name="property"/> on the dataset's <typeparamref name="TModel"/> objects</param>
            <typeparam name="T">The type of the parameter to filter with</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FilterByParameterEqual``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},RestModels.ParameterRetrievers.ParameterRetriever)">
            <summary>
                Filters this route's dataset by a parameter value
            </summary>
            <param name="property">An expression getting the property to filter for</param>
            <param name="retriever">A function that will get the value of the parameter for a given request</param>
            <typeparam name="T">The type of the parameter to filter with</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FilterWhere(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
                Filters this route's dataset only including the elements that match the predicate
            </summary>
            <param name="predicate">The predicate to use to determine if an element should be included in the dataset or not</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.FilterWhere(System.Func{RestModels.Context.IApiContext{`0,`1},`0,System.Boolean})">
            <summary>
                Filters this route's dataset only including the elements that match the predicate
            </summary>
            <param name="predicate">The predicate to use to determine if an element should be included in the dataset or not</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Orders this route's dataset in an ascending order using the given key selector
            </summary>
            <param name="predicate">The predicate to use to give they key to sort by</param>
            <typeparam name="TKey">The type of the key to sort by</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IComparer{``0})">
            <summary>
                Orders this route's dataset in an ascending order using the given key selector
            </summary>
            <param name="predicate">The predicate to use to give they key to sort by</param>
            <param name="comparer">The comparer to use to compare two elements in the dataset</param>
            <typeparam name="TKey">The type of the key to sort by</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Orders this route's dataset in an descending order using the given key selector
            </summary>
            <param name="predicate">The predicate to use to give they key to sort by</param>
            <typeparam name="TKey">The type of the key to sort by</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.OrderByDescending``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IComparer{``0})">
            <summary>
                Orders this route's dataset in an descending order using the given key selector
            </summary>
            <param name="predicate">The predicate to use to give they key to sort by</param>
            <param name="comparer">The comparer to use to compare two elements in the dataset</param>
            <typeparam name="TKey">The type of the key to sort by</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CanGet">
            <summary>
                Indicates that this route accepts GET requests
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CanPost">
            <summary>
                Indicates that this route accepts POST requests
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CanPut">
            <summary>
                Indicates that this route accepts PUT requests
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CanDelete">
            <summary>
                Indicates that this route accepts DELETE requests
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.CanPatch">
            <summary>
                Indicates that this route accepts PATCH requests
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.UseRequestMethods(System.String[])">
            <summary>
                Indicates that this route accepts the given request methods
            </summary>
            <param name="methods">The request methods to accept</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a GET request for the given route pattern, clearing body parsers and any operation.
            </summary>
            <param name="routePattern">The route pattern to set up the request for</param>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a GET request for the same route pattern, clearing body parsers and any operation.
            </summary>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet">
            <summary>
                Sets up a GET request for the same route pattern, clearing body parsers and any operation.
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupAnonymousGet(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up an anonymous GET request for the given route pattern, clearing auth providers, body parsers, and any operation.
            </summary>
            <param name="routePattern">The route pattern to set up the request for</param>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupAnonymousGet(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up an anonymous GET request for the same route pattern, clearing body parsers and any operation.
            </summary>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupAnonymousGet">
            <summary>
                Sets up an anonymous GET request for the same route pattern, clearing body parsers and any operation.
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPost(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a POST request for the given route pattern
            </summary>
            <param name="routePattern">The route pattern to set up the request for</param>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPost(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a POST request for the same route pattern.
            </summary>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPost">
            <summary>
                Sets up a POST request for the same route pattern.
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPut(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a PUT request for the given route pattern
            </summary>
            <param name="routePattern">The route pattern to set up the request for</param>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPut(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a PUT request for the same route pattern.
            </summary>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPut">
            <summary>
                Sets up a PUT request for the same route pattern.
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupDelete(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a DELETE request for the given route pattern
            </summary>
            <param name="routePattern">The route pattern to set up the request for</param>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupDelete(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a DELETE request for the same route pattern.
            </summary>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupDelete">
            <summary>
                Sets up a DELETE request for the same route pattern.
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPatch(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a PATCH request for the given route pattern
            </summary>
            <param name="routePattern">The route pattern to set up the request for</param>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPatch(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})">
            <summary>
                Sets up a PATCH request for the same route pattern.
            </summary>
            <param name="optionsHandler">A handler for the route options</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupPatch">
            <summary>
                Sets up a PATCH request for the same route pattern.
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteJson(System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes all API outputs using JSON
            </summary>
            <param name="options">Options for the JSON serializer</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteJson">
            <summary>
                Writes all API outputs using JSON
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteJsonOrXml(System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes API outputs using JSON or XML depending on the Accept header, the "format" query parameter, then the
                Content-Type header, defaulting to JSON.
            </summary>
            <param name="options">Options for the JSON serializer</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteXml">
            <summary>
                Writes all API outputs using XML
            </summary>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteNumberAffected(System.String)">
            <summary>
            	Writes the number of affected elements in all API outputs
            </summary>
            <param name="templateString">The template string. All instances of "{0}" will be replaced with the number of affected elements</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.WriteString(System.String)">
            <summary>
            	Writes a string for all API outputs
            </summary>
            <param name="str">The string to return</param>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="M:RestModels.Options.Builder.RestModelOptionsBuilder`2.Template``1(System.Func{System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean,System.Threading.Tasks.Task{System.Nullable{System.Boolean}}})">
            <summary>
                Adds an exception handler to this route that handles all exceptions
            </summary>
            <param name="handler">The handler to use for a thrown exception</param>
            <typeparam name="TException">The type of exception that this handler will be called for</typeparam>
            <returns>This <see cref="T:RestModels.Options.Builder.RestModelOptionsBuilder`2" /> object, for chaining</returns>
        </member>
        <member name="T:RestModels.Options.FormattingOptions">
            <summary>
                Options to be used with an <see cref="T:RestModels.Results.IResultWriter`2" />
            </summary>
        </member>
        <member name="P:RestModels.Options.FormattingOptions.StripArrayIfSingleElement">
            <summary>
                Gets or sets a value indicating whether the data should be returned formatted as a single element if the dataset
                only has one element in it.
            </summary>
            <remarks>
                For example, in JSON, this would be the difference between returning [{ ... }] and { ... }
            </remarks>
        </member>
        <member name="P:RestModels.Options.FormattingOptions.IncludedReturnProperties">
            <summary>
                Gets or sets a list of properties that should be included in the result
            </summary>
        </member>
        <member name="M:RestModels.Options.FormattingOptions.Copy">
            <summary>
            	Makes a copy of these <see cref="T:RestModels.Options.FormattingOptions"/>
            </summary>
            <returns>A copy of these <see cref="T:RestModels.Options.FormattingOptions"/></returns>
        </member>
        <member name="T:RestModels.Options.ParserOptions">
            <summary>
                Options for parsing HTTP bodies
            </summary>
        </member>
        <member name="P:RestModels.Options.ParserOptions.DefaultPropertyValues">
            <summary>
                Gets or sets a list of default values for parsed properties
            </summary>
        </member>
        <member name="P:RestModels.Options.ParserOptions.IgnoredParseProperties">
            <summary>
                Gets or sets a list of properties that are ignored if their values are set
            </summary>
        </member>
        <member name="P:RestModels.Options.ParserOptions.RequiredParseProperties">
            <summary>
                Gets or sets a list of properties that are required when parsing
            </summary>
        </member>
        <member name="P:RestModels.Options.ParserOptions.ParseArrays">
            <summary>
            	Gets or sets a value indicating whether or not the parser should accept arrays
            </summary>
        </member>
        <member name="M:RestModels.Options.ParserOptions.Copy">
            <summary>
            	Makes a copy of these <see cref="T:RestModels.Options.ParserOptions"/>
            </summary>
            <returns>A copy of these <see cref="T:RestModels.Options.ParserOptions"/></returns>
        </member>
        <member name="T:RestModels.Options.RestModelOptions`2">
            <summary>
                Options for a specific RestModels route
            </summary>
            <typeparam name="TModel">The type of model this route handles</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.AuthProviders">
            <summary>
                Gets or sets a list of providers available to authenticate the request
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.BodyParsers">
            <summary>
                Gets or sets the parsers available to parse a request body
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.Conditions">
            <summary>
                Gets or sets a list of conditions that the request must meet
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.Filters">
            <summary>
                Gets or sets a list of filters to pare down the dataset
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.ModelProvider">
            <summary>
                Gets or sets the provider for the API's models
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.Operation">
            <summary>
                Gets or sets the operation to perform on the dataset, if any
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.ParserOptions">
            <summary>
                Gets or sets the options for parsing request bodies
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.RequestMethods">
            <summary>
                Gets or sets the request methods these options match
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.ResultWriter">
            <summary>
                Gets or sets the result writer for this route
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.FormattingOptions">
            <summary>
            	Gets or sets any options for the <see cref="P:RestModels.Options.RestModelOptions`2.ResultWriter"/>
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.RoutePattern">
            <summary>
                Gets or sets the pattern of the route that these options match with
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.ExceptionHandlers">
            <summary>
            	Gets or sets the list of exception handlers for this route
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.PreOpActions">
            <summary>
            	Gets or sets the list of pre-operation actions for this route
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.PostOpActions">
            <summary>
            	Gets or sets the list of post-operation actions for this route
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.ResponseType">
            <summary>
            	Gets or sets the type of <see cref="T:RestModels.Responses.Response`1"/> to wrap responses in
            </summary>
        </member>
        <member name="P:RestModels.Options.RestModelOptions`2.RouteOptionsHandler">
            <summary>
                Gets or sets the handler that will set route options, if any
            </summary>
        </member>
        <member name="M:RestModels.Options.RestModelOptions`2.Copy">
            <summary>
                Makes a copy of this options object and returns it
            </summary>
            <returns>The copy of this <see cref="T:RestModels.Options.RestModelOptions`2" /></returns>
        </member>
        <member name="T:RestModels.ParameterRetrievers.HeaderRetriever">
            <summary>
                Parameter retriever that retrieves a header by name
            </summary>
        </member>
        <member name="M:RestModels.ParameterRetrievers.HeaderRetriever.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.ParameterRetrievers.HeaderRetriever" /> class.
            </summary>
            <param name="name">The name of the header to retrieve</param>
            <param name="defaultValue">The default value of the header if none is specified</param>
        </member>
        <member name="M:RestModels.ParameterRetrievers.HeaderRetriever.GetValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the value of the header for the given request
            </summary>
            <param name="request">The HTTP request context</param>
            <returns>The retrieved header value</returns>
        </member>
        <member name="T:RestModels.ParameterRetrievers.ParameterRetriever">
            <summary>
                Defines a type that can retrieve a request parameter given a request context
            </summary>
        </member>
        <member name="M:RestModels.ParameterRetrievers.ParameterRetriever.#ctor(System.String,System.String)">
            <summary>
            	Initializes a new instance of the <see cref="T:RestModels.ParameterRetrievers.ParameterRetriever" /> class.
            </summary>
            <param name="name">The name of the parameter to retrieve</param>
            <param name="defaultValue">The default value of the parameter if none is specified</param>
        </member>
        <member name="P:RestModels.ParameterRetrievers.ParameterRetriever.DefaultValue">
            <summary>
                Gets the default value of the parameter if none is specified
            </summary>
        </member>
        <member name="P:RestModels.ParameterRetrievers.ParameterRetriever.ParameterName">
            <summary>
                Gets the name of the parameter to retrieve
            </summary>
        </member>
        <member name="M:RestModels.ParameterRetrievers.ParameterRetriever.GetValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the value of a parameter for the given request
            </summary>
            <param name="request">The HTTP request context</param>
            <returns>The retrieved parameter value</returns>
        </member>
        <member name="T:RestModels.ParameterRetrievers.QueryParameterRetriever">
            <summary>
                Parameter retriever that retrieves a query parameter by name
            </summary>
        </member>
        <member name="M:RestModels.ParameterRetrievers.QueryParameterRetriever.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.ParameterRetrievers.QueryParameterRetriever" /> class.
            </summary>
            <param name="name">The name of the query parameter to retrieve</param>
            <param name="defaultValue">The default value of the parameter if none is specified</param>
        </member>
        <member name="M:RestModels.ParameterRetrievers.QueryParameterRetriever.GetValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the value of the query parameter for the given request
            </summary>
            <param name="request">The HTTP request context</param>
            <returns>The retrieved parameter value</returns>
        </member>
        <member name="T:RestModels.ParameterRetrievers.RouteValueRetriever">
            <summary>
                Parameter retriever that retrieves a route parameter by name
            </summary>
        </member>
        <member name="M:RestModels.ParameterRetrievers.RouteValueRetriever.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.ParameterRetrievers.RouteValueRetriever" /> class.
            </summary>
            <param name="name">The name of the route parameter to retrieve</param>
            <param name="defaultValue">The default value of the parameter if none is specified</param>
        </member>
        <member name="M:RestModels.ParameterRetrievers.RouteValueRetriever.GetValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the value of the route parameter for the given request
            </summary>
            <param name="request">The HTTP request context</param>
            <returns>The retrieved parameter value</returns>
        </member>
        <member name="T:RestModels.Parsers.IBodyParser`1">
            <summary>
                Parser for a request body
            </summary>
            <typeparam name="TModel">The type to parse to</typeparam>
        </member>
        <member name="M:RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                Parses a request body
            </summary>
            <param name="body">The data of the request body</param>
            <param name="options">Options for the parser</param>
            <param name="context">The context for the HTTP request</param>
            <returns>The parsed models</returns>
        </member>
        <member name="M:RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            	Gets whether or not the request body can be parsed by this <see cref="T:RestModels.Parsers.IBodyParser`1"/>
            </summary>
            <param name="context">The context for the HTTP request</param>
            <returns><see langword="true"/> if the request body can be parsed by this <see cref="T:RestModels.Parsers.IBodyParser`1"/>, <see langword="false"/> otherwise</returns>
        </member>
        <member name="T:RestModels.Parsers.JsonBodyParser`1">
            <summary>
            	Body parser that accepts JSON request bodies
            </summary>
            <typeparam name="TModel">The type of model to parse</typeparam>
        </member>
        <member name="F:RestModels.Parsers.JsonBodyParser`1.PropertyMap">
            <summary>
            	A map of a property's serialized name to its info
            </summary>
        </member>
        <member name="F:RestModels.Parsers.JsonBodyParser`1.SerializationOptions">
            <summary>
            	Options for the JSON deserializer
            </summary>
        </member>
        <member name="M:RestModels.Parsers.JsonBodyParser`1.#ctor">
            <summary>
            	Initializes a new instance of the <see cref="T:RestModels.Parsers.JsonBodyParser`1"/> class
            </summary>
        </member>
        <member name="M:RestModels.Parsers.JsonBodyParser`1.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            	Initializes a new instance of the <see cref="T:RestModels.Parsers.JsonBodyParser`1"/> class
            </summary>
            <param name="serializerOptions">Options for the JSON serializer</param>
        </member>
        <member name="M:RestModels.Parsers.JsonBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            	Gets whether or not the request body can be parsed by this <see cref="T:RestModels.Parsers.IBodyParser`1"/>
            </summary>
            <param name="context">The context for the HTTP request</param>
            <returns><see langword="true"/> if the request body can be parsed by this <see cref="T:RestModels.Parsers.IBodyParser`1"/>, <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:RestModels.Parsers.JsonBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                Parses a request body
            </summary>
            <param name="body">The data of the request body</param>
            <param name="options">Options for the parser</param>
            <param name="context">The context for the HTTP request</param>
            <returns>The parsed object</returns>
        </member>
        <member name="T:RestModels.Parsers.ParseResult`1">
            <summary>
                The result of parsing a request body
            </summary>
            <typeparam name="TModel">The type of model being parsed</typeparam>
        </member>
        <member name="M:RestModels.Parsers.ParseResult`1.#ctor(`0,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <summary>Initializes a new instance of the <see cref="T:RestModels.Parsers.ParseResult`1"/> class.</summary>
            <param name="parsedModel">The model that was parsed</param>
            <param name="presentProperties">The properties that were present on this model in the request body</param>
        </member>
        <member name="P:RestModels.Parsers.ParseResult`1.ParsedModel">
            <summary>
                Gets or sets the model that was parsed
            </summary>
        </member>
        <member name="P:RestModels.Parsers.ParseResult`1.PresentProperties">
            <summary>
                Gets or sets a list of the properties that were present on this model in the request body
            </summary>
        </member>
        <member name="M:RestModels.Parsers.ParseResult`1.op_Implicit(RestModels.Parsers.ParseResult{`0})~`0">
            <summary>
            	Implicitly casts this <see cref="T:RestModels.Parsers.ParseResult`1"/> to the <typeparamref cref="!:TModel"/> it contains.
            </summary>
            <param name="result">The <see cref="T:RestModels.Parsers.ParseResult`1"/> to cast</param>
        </member>
        <member name="T:RestModels.Parsers.XmlBodyParser`1">
            <summary>
                Parser for an XML request body
            </summary>
            <typeparam name="TModel">The type to parse to</typeparam>
        </member>
        <member name="M:RestModels.Parsers.XmlBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
                Parses an XML request body
            </summary>
            <param name="body">The data of the request body</param>
            <param name="options">Options for the parser</param>
            <param name="context">The context for the HTTP request</param>
            <returns>The parsed models</returns>
        </member>
        <member name="M:RestModels.Parsers.XmlBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            	Gets whether or not the request body can be parsed by this <see cref="T:RestModels.Parsers.IBodyParser`1"/>
            </summary>
            <param name="context">The context for the HTTP request</param>
            <returns><see langword="true"/> if the request body can be parsed by this <see cref="T:RestModels.Parsers.IBodyParser`1"/>, <see langword="false"/> otherwise</returns>
        </member>
        <member name="T:RestModels.Responses.Attributes.ApiVersionAttribute">
            <summary>
                Attribute that indicates that the property is a response value that should be set to the responding version of the
                API
            </summary>
        </member>
        <member name="T:RestModels.Responses.Attributes.CurrentPageAttribute">
            <summary>
                Attribute that indicates that the property is a response value that should be set to the current page if using
                pagination
            </summary>
        </member>
        <member name="T:RestModels.Responses.Attributes.DeprecationNoticeAttribute">
            <summary>
                Attribute that indicates that the property is a response value that should be set to a string describing that this
                API version has been deprecated
            </summary>
        </member>
        <member name="T:RestModels.Responses.Attributes.ModelCountAttribute">
            <summary>
                Attribute that indicates that the property is a response value that should be set to the number of models returned
                in the request
                using pagination
            </summary>
        </member>
        <member name="T:RestModels.Responses.Attributes.ResponseValueAttribute">
            <summary>
                Attribute that indicates the property is a response value and can be dynamically set by name
            </summary>
        </member>
        <member name="M:RestModels.Responses.Attributes.ResponseValueAttribute.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Responses.Attributes.ResponseValueAttribute" /> class
            </summary>
            <param name="name">The name to use to refer to this response value</param>
        </member>
        <member name="P:RestModels.Responses.Attributes.ResponseValueAttribute.Name">
            <summary>
                Gets the name to use to refer to this response value
            </summary>
        </member>
        <member name="T:RestModels.Responses.Attributes.TotalPagesAttribute">
            <summary>
                Attribute that indicates that the property is a response value that should be set to the total number of pages if
                using pagination
            </summary>
        </member>
        <member name="T:RestModels.Responses.BasicResponse`1">
            <summary>
                A basic API response
            </summary>
            <typeparam name="TModel">The type of model included in the API response</typeparam>
        </member>
        <member name="P:RestModels.Responses.BasicResponse`1.ApiVersion">
            <summary>
                Gets or sets a string which, when present, indicates the version of this API
            </summary>
        </member>
        <member name="P:RestModels.Responses.BasicResponse`1.Count">
            <summary>
                Gets or sets an integer which, when present, indicates the number of elements included in the response
            </summary>
        </member>
        <member name="P:RestModels.Responses.BasicResponse`1.DeprecationNotice">
            <summary>
                Gets or sets a string which, when present, indicates that this API version has been deprecated
            </summary>
        </member>
        <member name="P:RestModels.Responses.BasicResponse`1.Element">
            <summary>
                Gets or sets the element to include in the API response
            </summary>
        </member>
        <member name="P:RestModels.Responses.BasicResponse`1.Elements">
            <summary>
                Gets or sets the elements to include in the API response
            </summary>
        </member>
        <member name="P:RestModels.Responses.BasicResponse`1.Page">
            <summary>
                Gets or sets an integer which, when present, indicates the current page when using pagination
            </summary>
        </member>
        <member name="P:RestModels.Responses.BasicResponse`1.Pages">
            <summary>
                Gets or sets an integer which, when present, indicates the total number of pages when using pagination
            </summary>
        </member>
        <member name="T:RestModels.Responses.Response`1">
            <summary>
                An API response
            </summary>
            <typeparam name="TModel">The model that the response contains</typeparam>
        </member>
        <member name="F:RestModels.Responses.Response`1.SetProperties">
            <summary>
                All of the properties on this <see cref="T:RestModels.Responses.Response`1" /> that have been set
            </summary>
        </member>
        <member name="F:RestModels.Responses.Response`1.Properties">
            <summary>
                All of the public, writable properties on this <see cref="T:RestModels.Responses.Response`1" />
            </summary>
        </member>
        <member name="M:RestModels.Responses.Response`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:RestModels.Responses.Response`1" /> class.</summary>
        </member>
        <member name="M:RestModels.Responses.Response`1.GetIncludedProperties">
            <summary>
            	Gets all of the properties on this <see cref="T:RestModels.Responses.Response`1" /> that should be included in the serialized body
            </summary>
            <returns> All of the properties on this <see cref="T:RestModels.Responses.Response`1" /> that should be included in the serialized body</returns>
        </member>
        <member name="M:RestModels.Responses.Response`1.GetOmittedProperties">
            <summary>
            	Gets all of the properties on this <see cref="T:RestModels.Responses.Response`1" /> that should not be included in the serialized body
            </summary>
            <returns> All of the properties on this <see cref="T:RestModels.Responses.Response`1" /> that should not be included in the serialized body</returns>
        </member>
        <member name="M:RestModels.Responses.Response`1.Set``1(System.Object)">
            <summary>
            	Sets the value of all properties on this <see cref="T:RestModels.Responses.Response`1"/> that have the given attribute applied to them. If no such properties exist, no action will occur.
            </summary>
            <typeparam name="TAttribute">The attribute to match on the properties to set</typeparam>
            <param name="value">The value to assign to that property</param>
        </member>
        <member name="M:RestModels.Responses.Response`1.Set(System.String,System.Object)">
            <summary>
            	Sets the value of all properties on this <see cref="T:RestModels.Responses.Response`1"/> that have the <see cref="T:RestModels.Responses.Attributes.ResponseValueAttribute"/> with the given name applied to them. If no such properties exist, no action will occur.
            </summary>
            <param name="name">The name given to the <see cref="T:RestModels.Responses.Attributes.ResponseValueAttribute"/> on the properties to set</param>
            <param name="value">The value to assign to that property</param>
        </member>
        <member name="M:RestModels.Responses.Response`1.SetString(System.String,System.String)">
            <summary>
            	Sets the value of all properties on this <see cref="T:RestModels.Responses.Response`1"/> that have the <see cref="T:RestModels.Responses.Attributes.ResponseValueAttribute"/> with the given name applied to them. If no such properties exist, no action will occur.
            </summary>
            <param name="name">The name given to the <see cref="T:RestModels.Responses.Attributes.ResponseValueAttribute"/> on the properties to set</param>
            <param name="value">The string value to assign to that property</param>
            <remarks>
            	This method will attempt to convert the string value to a supported type if the type of the matching property is not string.
            </remarks>
        </member>
        <member name="M:RestModels.Responses.Response`1.SetString``1(System.String)">
            <summary>
            	Sets the value of all properties on this <see cref="T:RestModels.Responses.Response`1"/> that have the given attribute applied to them. If no such properties exist, no action will occur.
            </summary>
            <typeparam name="TAttribute">The attribute to match on the properties to set</typeparam>
            <param name="value">The string value to assign to that property</param>
            <remarks>
            	This method will attempt to convert the string value to a supported type if the type of the matching property is not string.
            </remarks>
        </member>
        <member name="M:RestModels.Responses.Response`1.Populate(`0[],System.Boolean)">
            <summary>
            	Populates the model property on this <see cref="T:RestModels.Responses.Response`1"/>
            </summary>
            <param name="models">The model dataset</param>
            <param name="shouldStrip"><see langword="true"/> to strip the array if there's only one element, <see langword="false"/> otherwise</param>
        </member>
        <member name="T:RestModels.Results.AcceptDependentResultWriter`2">
            <summary>
                A <see cref="T:RestModels.Results.RequestDependentResultWriter`2" /> that uses the Accept header to determine which result
                writer to use
            </summary>
            <typeparam name="TModel">The type of model to format</typeparam>
            <typeparam name="TUser">The type of user context</typeparam>
        </member>
        <member name="M:RestModels.Results.AcceptDependentResultWriter`2.#ctor(System.String[],RestModels.Results.IResultWriter{`0,`1}[],System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.AcceptDependentResultWriter`2" /> class.
            </summary>
            <param name="mimeTypes">The mime types that should determine which result writer to use</param>
            <param name="writers">The result writers to use, indexed in the same order as <paramref name="mimeTypes" /></param>
            <param name="defaultIndex">
                The index of the default result writer to use, or -1 if an error should be thrown if no
                values match
            </param>
        </member>
        <member name="M:RestModels.Results.AcceptDependentResultWriter`2.GetRequestParameterValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the first usable mime-type in the Accept header
            </summary>
            <param name="request">The request context to use to get the value</param>
            <returns>The mime-type to use to write a result</returns>
        </member>
        <member name="T:RestModels.Results.HeaderDependentResultWriter`2">
            <summary>
                A <see cref="T:RestModels.Results.RequestDependentResultWriter`2" /> that uses a header to determine which result
                writer to use
            </summary>
            <typeparam name="TModel">The type of model to format</typeparam>
            <typeparam name="TUser">The type of user context</typeparam>
        </member>
        <member name="F:RestModels.Results.HeaderDependentResultWriter`2.HeaderName">
            <summary>
                The name of the header to use to determine the result writer for the request
            </summary>
        </member>
        <member name="M:RestModels.Results.HeaderDependentResultWriter`2.#ctor(System.String,System.String[],RestModels.Results.IResultWriter{`0,`1}[],System.Int32,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.HeaderDependentResultWriter`2" /> class.
            </summary>
            <param name="headerName">The name of the header to use to determine the result writer for the request</param>
            <param name="values">The values of the header that should determine which result writer to use</param>
            <param name="writers">The result writers to use, indexed in the same order as <paramref name="values" /></param>
            <param name="defaultIndex">
                The index of the default result writer to use, or -1 if an error should be thrown if no
                values match
            </param>
            <param name="caseSensitive"><see langword="true"/> if the parameter values are case sensitive, <see langword="false"/> otherwise</param>
        </member>
        <member name="M:RestModels.Results.HeaderDependentResultWriter`2.GetRequestParameterValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the value of the header this <see cref="T:RestModels.Results.RequestDependentResultWriter`2" /> switches on
            </summary>
            <param name="request">The request context to use to get the parameter value</param>
            <returns>The value of the header to switch on</returns>
        </member>
        <member name="T:RestModels.Results.IResultWriter`2">
            <summary>
                Writer for API results
            </summary>
            <typeparam name="TModel">The type of model to format</typeparam>
            <typeparam name="TUser">The type of authenticated user context</typeparam>
        </member>
        <member name="M:RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            	Gets whether or not this <see cref="T:RestModels.Results.IResultWriter`2"/> can write a result for the given request
            </summary>
            <param name="request">The request to test if a result can be written for it</param>
            <returns><see langword="true"/> if a result can be written for <paramref name="request"/>, <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:RestModels.Results.IResultWriter`2.WriteResultAsync(RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},RestModels.Options.FormattingOptions)">
            <summary>
                Formats the API result
            </summary>
            <param name="context">The current API context</param>
            <param name="data">The dataset to format</param>
            <param name="options">Options for formatting the result</param>
            <returns>When the result has been sent</returns>
        </member>
        <member name="T:RestModels.Results.IResultWriter`1">
            <summary>
                Writer for API results
            </summary>
            <typeparam name="TModel">The type of model to format</typeparam>
        </member>
        <member name="T:RestModels.Results.Json.IModelJsonConverter">
            <summary>
            	Interface that defines a JSON converter that can convert API objects
            </summary>
        </member>
        <member name="M:RestModels.Results.Json.IModelJsonConverter.WriteObject(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes the given model object to a JSON writer
            </summary>
            <param name="writer">The JSON writer to write the <paramref name="value" /> to</param>
            <param name="value">The value to write</param>
            <param name="options">Any options to use when serializing the JSON</param>
        </member>
        <member name="T:RestModels.Results.Json.JsonResultWriter`1">
            <summary>
                Result writer that formats data in a JSON format using System.Text.Json
            </summary>
            <typeparam name="TModel">The type of serialized model</typeparam>
        </member>
        <member name="F:RestModels.Results.Json.JsonResultWriter`1.Options">
            <summary>
            	Options for the JSON serializer
            </summary>
        </member>
        <member name="M:RestModels.Results.Json.JsonResultWriter`1.#ctor(System.Text.Json.JsonSerializerOptions)">
            <summary>
            	Initializes a new instance of the <see cref="T:RestModels.Results.Json.JsonResultWriter`1"/> class
            </summary>
            <param name="options">Options for the JSON serializer</param>
        </member>
        <member name="M:RestModels.Results.Json.JsonResultWriter`1.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            	Gets whether or not this <see cref="T:RestModels.Results.IResultWriter`2"/> can write a result for the given request
            </summary>
            <param name="request">The request to test if a result can be written for it</param>
            <returns><see langword="true"/></returns>
        </member>
        <member name="M:RestModels.Results.Json.JsonResultWriter`1.WriteResultAsync(RestModels.Context.IApiContext{`0,System.Object},System.Collections.Generic.IEnumerable{`0},RestModels.Options.FormattingOptions)">
            <summary>
                Formats the API result
            </summary>
            <param name="context">The current API context</param>
            <param name="data">The dataset to format</param>
            <param name="formatOptions">Options for formatting the result</param>
            <returns>When the result has been sent</returns>
        </member>
        <member name="M:RestModels.Results.Json.JsonResultWriter`1.CreateCustomOptions(RestModels.Options.FormattingOptions)">
            <summary>
            	Creates a clone of the given serialization options with an additional <see cref="T:RestModels.Results.Json.ModelJsonConverter`1"/>
            </summary>
            <param name="formatOptions">Options containing the included return properties</param>
            <returns>The new <see cref="T:System.Text.Json.JsonSerializerOptions"/></returns>
        </member>
        <member name="T:RestModels.Results.Json.ModelJsonConverter`1">
            <summary>
                JSON converter for RestModels API objects
            </summary>
            <typeparam name="TModel">The type of model to convert</typeparam>
        </member>
        <member name="F:RestModels.Results.Json.ModelJsonConverter`1.IncludedReturnProperties">
            <summary>
                The list of properties that should be included when serializing
            </summary>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonConverter`1.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.Json.ModelJsonConverter`1" /> class.
            </summary>
            <param name="includedReturnProperties">The list of properties that should be included when serializing the model</param>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Reads the model from a JSON reader. Not yet implemented
            </summary>
            <param name="reader">The JSON reader to read the model from</param>
            <param name="typeToConvert">The type to convert the read data into</param>
            <param name="options">Any options to use when deserializing the JSON</param>
            <returns>The deserialized object</returns>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonConverter`1.WriteObject(System.Text.Json.Utf8JsonWriter,System.Object,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes the given model object to a JSON writer
            </summary>
            <param name="writer">The JSON writer to write the <paramref name="value" /> to</param>
            <param name="value">The value to write</param>
            <param name="options">Any options to use when serializing the JSON</param>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonConverter`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes the given model object to a JSON writer
            </summary>
            <param name="writer">The JSON writer to write the <paramref name="value" /> to</param>
            <param name="value">The value to write</param>
            <param name="options">Any options to use when serializing the JSON</param>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonConverter`1.WriteExtensionData(System.Reflection.PropertyInfo,System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes any extra values in a property on <typeparamref name="TModel" /> marked with the
                <see cref="T:System.Text.Json.Serialization.JsonExtensionDataAttribute" /> to the given JSON writer
            </summary>
            <param name="property">The property marked to store extra values</param>
            <param name="writer">The JSON writer to write the extra properties to</param>
            <param name="value">The model that the property is on</param>
            <param name="options">Any options for the JSON serializer</param>
        </member>
        <member name="T:RestModels.Results.Json.ModelJsonProperty`1">
            <summary>
                A JSON property on a model
            </summary>
            <typeparam name="TModel">The model the property is on</typeparam>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonProperty`1.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes the property to a JSON writer
            </summary>
            <param name="writer">The writer to write the value of the property to</param>
            <param name="model">The model that contains the property</param>
            <param name="options">Options for the JSON serializer</param>
        </member>
        <member name="T:RestModels.Results.Json.ModelJsonProperty`2">
            <summary>
                A JSON property on a model
            </summary>
            <typeparam name="TModel">The model the property is on</typeparam>
            <typeparam name="TProperty">The type of property to serialize</typeparam>
        </member>
        <member name="F:RestModels.Results.Json.ModelJsonProperty`2.Converter">
            <summary>
                The <see cref="T:System.Text.Json.Serialization.JsonConverter" /> to use to serialize the property.
            </summary>
        </member>
        <member name="F:RestModels.Results.Json.ModelJsonProperty`2.Property">
            <summary>
                The property being serialized
            </summary>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonProperty`2.#ctor(System.Reflection.PropertyInfo)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.Json.ModelJsonProperty`2" /> class
            </summary>
            <param name="property">The property being serialized</param>
        </member>
        <member name="M:RestModels.Results.Json.ModelJsonProperty`2.Write(System.Text.Json.Utf8JsonWriter,`0,System.Text.Json.JsonSerializerOptions)">
            <summary>
                Writes the property to a JSON writer
            </summary>
            <param name="writer">The writer to write the value of the property to</param>
            <param name="model">The model that contains the property</param>
            <param name="options">Options for the JSON serializer</param>
        </member>
        <member name="T:RestModels.Results.NumberAffectedResultWriter`1">
            <summary>
                A result writer that simply writes the number of models affected by the request
            </summary>
            <typeparam name="TModel">The type of model to format</typeparam>
        </member>
        <member name="F:RestModels.Results.NumberAffectedResultWriter`1.TemplateText">
            <summary>
            	The text to use to format the response. All instances of "{0}" will be replaced with the
            	number of models affected by the request
            </summary>
        </member>
        <member name="M:RestModels.Results.NumberAffectedResultWriter`1.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:RestModels.Results.NumberAffectedResultWriter`1" /> class.</summary>
            <param name="templateText">
                The text to use to format the response. All instances of "{0}" will be replaced with the
                number of models affected by the request
            </param>
        </member>
        <member name="M:RestModels.Results.NumberAffectedResultWriter`1.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            	Gets whether or not this <see cref="T:RestModels.Results.IResultWriter`2"/> can write a result for the given request
            </summary>
            <param name="request">The request to test if a result can be written for it</param>
            <returns><see langword="true"/></returns>
        </member>
        <member name="M:RestModels.Results.NumberAffectedResultWriter`1.WriteResultAsync(RestModels.Context.IApiContext{`0,System.Object},System.Collections.Generic.IEnumerable{`0},RestModels.Options.FormattingOptions)">
            <summary>
                Formats the API result
            </summary>
            <param name="context">The current API context</param>
            <param name="data">The dataset to format</param>
            <param name="options">Options for formatting the result</param>
            <returns>When the result has been sent</returns>
        </member>
        <member name="T:RestModels.Results.QueryDependentResultWriter`2">
            <summary>
                A <see cref="T:RestModels.Results.RequestDependentResultWriter`2" /> that uses a query parameter to determine which result
                writer to use
            </summary>
            <typeparam name="TModel">The type of model to format</typeparam>
            <typeparam name="TUser">The type of user context</typeparam>
        </member>
        <member name="F:RestModels.Results.QueryDependentResultWriter`2.ParameterName">
            <summary>
                The name of the query parameter to use to determine the result writer for the request
            </summary>
        </member>
        <member name="M:RestModels.Results.QueryDependentResultWriter`2.#ctor(System.String,System.String[],RestModels.Results.IResultWriter{`0,`1}[],System.Int32,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.QueryDependentResultWriter`2" /> class.
            </summary>
            <param name="paramName">The name of the query parameter to use to determine the result writer for the request</param>
            <param name="values">The values of the query parameter that should determine which result writer to use</param>
            <param name="writers">The result writers to use, indexed in the same order as <paramref name="values" /></param>
            <param name="defaultIndex">
                The index of the default result writer to use, or -1 if an error should be thrown if no
                values match
            </param>
            <param name="caseSensitive"><see langword="true"/> if the parameter values are case sensitive, <see langword="false"/> otherwise</param>
        </member>
        <member name="M:RestModels.Results.QueryDependentResultWriter`2.GetRequestParameterValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the value of the query parameter this <see cref="T:RestModels.Results.RequestDependentResultWriter`2" /> switches on
            </summary>
            <param name="request">The request context to use to get the parameter value</param>
            <returns>The value of the query parameter to switch on</returns>
        </member>
        <member name="T:RestModels.Results.RequestDependentResultWriter`2">
            <summary>
                A result writer that chooses how to format the result based on the request
            </summary>
            <typeparam name="TModel">The type of model to format</typeparam>
            <typeparam name="TUser">The type of user context</typeparam>
            <remarks>
                Though perhaps this class is a little confusing at first, it helps to know that this class forms the basis for the <see cref="T:RestModels.Results.QueryDependentResultWriter`2"/>, <see cref="T:RestModels.Results.HeaderDependentResultWriter`2"/>, and like classes.
            </remarks>
        </member>
        <member name="F:RestModels.Results.RequestDependentResultWriter`2.CaseSensitive">
            <summary>
                True if the parameter values are case sensitive, false otherwise
            </summary>
        </member>
        <member name="F:RestModels.Results.RequestDependentResultWriter`2.DefaultIndex">
            <summary>
                The index of the default result writer to use, or -1 if an error should be thrown if no values match.
            </summary>
        </member>
        <member name="F:RestModels.Results.RequestDependentResultWriter`2.ParameterValues">
            <summary>
                The values of the parameters that
            </summary>
        </member>
        <member name="F:RestModels.Results.RequestDependentResultWriter`2.ResultWriters">
            <summary>
                The result writers to use, indexed in the same order as <see cref="F:RestModels.Results.RequestDependentResultWriter`2.ParameterValues" />
            </summary>
        </member>
        <member name="M:RestModels.Results.RequestDependentResultWriter`2.#ctor(System.String[],RestModels.Results.IResultWriter{`0,`1}[],System.Int32,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.RequestDependentResultWriter`2" /> class.
            </summary>
            <param name="values">The values of the request property that should determine which result writer to use</param>
            <param name="writers">The result writers to use, indexed in the same order as <paramref name="values" /></param>
            <param name="defaultIndex">
                The index of the default result writer to use, or -1 if an error should be thrown if no
                values match
            </param>
            <param name="caseSensitive"><see langword="true"/> if the parameter values are case sensitive, <see langword="false"/> otherwise</param>
        </member>
        <member name="M:RestModels.Results.RequestDependentResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets whether or not this <see cref="T:RestModels.Results.IResultWriter`2" /> can write a result for the given request
            </summary>
            <param name="request">The request to test if a result can be written for it</param>
            <returns><see langword="true"/> if a result can be written for <paramref name="request" />, <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:RestModels.Results.RequestDependentResultWriter`2.WriteResultAsync(RestModels.Context.IApiContext{`0,`1},System.Collections.Generic.IEnumerable{`0},RestModels.Options.FormattingOptions)">
            <summary>
                Formats the API result
            </summary>
            <param name="context">The current API context</param>
            <param name="data">The dataset to format</param>
            <param name="options">Options for formatting the result</param>
            <returns>When the result has been sent</returns>
        </member>
        <member name="M:RestModels.Results.RequestDependentResultWriter`2.GetRequestParameterValue(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the value of the request parameter this <see cref="T:RestModels.Results.RequestDependentResultWriter`2" /> switches on
            </summary>
            <param name="request">The request context to use to get the parameter value</param>
            <returns>The value of the request parameter to switch on</returns>
        </member>
        <member name="M:RestModels.Results.RequestDependentResultWriter`2.GetWriterIndex(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets the result writer index for the given request
            </summary>
            <param name="request">The request context to get the result writer index for</param>
            <returns>The index of the result writer to use for this request, or -1 if none match</returns>
        </member>
        <member name="T:RestModels.Results.StringResultWriter`1">
            <summary>
                A result writer that simply writes a static string
            </summary>
            <typeparam name="TModel">The type of model managed by the API</typeparam>
        </member>
        <member name="F:RestModels.Results.StringResultWriter`1.ResponseText">
            <summary>
                The text to respond with
            </summary>
        </member>
        <member name="M:RestModels.Results.StringResultWriter`1.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.StringResultWriter`1" /> class.
            </summary>
            <param name="responseText">The text to respond with</param>
        </member>
        <member name="M:RestModels.Results.StringResultWriter`1.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
                Gets whether or not this <see cref="T:RestModels.Results.IResultWriter`2" /> can write a result for the given request
            </summary>
            <param name="request">The request to test if a result can be written for it</param>
            <returns>
                <see langword="true"/>
            </returns>
        </member>
        <member name="M:RestModels.Results.StringResultWriter`1.WriteResultAsync(RestModels.Context.IApiContext{`0,System.Object},System.Collections.Generic.IEnumerable{`0},RestModels.Options.FormattingOptions)">
            <summary>
                Formats the API result
            </summary>
            <param name="context">The current API context</param>
            <param name="data">The dataset to format</param>
            <param name="options">Options for formatting the result</param>
            <returns>When the result has been sent</returns>
        </member>
        <member name="T:RestModels.Results.XmlResultWriter`1">
            <summary>
                Result writer that formats data in an XML format using System.Xml.Serialization
            </summary>
            <typeparam name="TModel">The type of serialized model</typeparam>
        </member>
        <member name="F:RestModels.Results.XmlResultWriter`1.Properties">
            <summary>
                A list of all of the public properties on <typeparamref cref="!:TModel" />
            </summary>
        </member>
        <member name="M:RestModels.Results.XmlResultWriter`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:RestModels.Results.XmlResultWriter`1" /> class
            </summary>
        </member>
        <member name="M:RestModels.Results.XmlResultWriter`1.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)">
            <summary>
            	Gets whether or not this <see cref="T:RestModels.Results.IResultWriter`2"/> can write a result for the given request
            </summary>
            <param name="request">The request to test if a result can be written for it</param>
            <returns><see langword="true"/></returns>
        </member>
        <member name="M:RestModels.Results.XmlResultWriter`1.WriteResultAsync(RestModels.Context.IApiContext{`0,System.Object},System.Collections.Generic.IEnumerable{`0},RestModels.Options.FormattingOptions)">
            <summary>
                Formats the API result
            </summary>
            <param name="context">The current API context</param>
            <param name="data">The dataset to format</param>
            <param name="options">Options for formatting the result</param>
            <returns>When the result has been sent</returns>
        </member>
        <member name="M:RestModels.Results.XmlResultWriter`1.OmitProperties(System.Xml.Serialization.XmlAttributeOverrides,System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo})">
            <summary>
            	Omits the given list of properties in XML serialization
            </summary>
            <param name="overrides">The <see cref="T:System.Xml.Serialization.XmlAttributeOverrides"/> to set the <see cref="T:System.Xml.Serialization.XmlIgnoreAttribute" /> on</param>
            <param name="omitted">The properties to omit</param>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions">
            <summary>
                Extension methods for the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" /> interface.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``1(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser}})">
            <summary>
                Adds rest models middleware to the app
            </summary>
            <typeparam name="TModel">The type of model to use with the API</typeparam>
            <typeparam name="TUser">The user to authenticate with the API</typeparam>
            <param name="app">The app to add rest models to</param>
            <param name="route">The base route for rest models</param>
            <param name="optionsHandler">A handler to set options for this rest models API</param>
            <returns>The same <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />, for chaining</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``1(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser}})">
            <summary>
                Adds rest models middleware to the app at the root ("/") endpoint
            </summary>
            <typeparam name="TModel">The type of model to use with the API</typeparam>
            <typeparam name="TUser">The user to authenticate with the API</typeparam>
            <param name="app">The app to add rest models to</param>
            <param name="optionsHandler">A handler to set options for this rest models API</param>
            <returns>The same <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />, for chaining</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``1(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,RestModels.Auth.NoUser}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})">
            <summary>
                Adds rest models middleware to the app
            </summary>
            <typeparam name="TModel">The type of model to use with the API</typeparam>
            <typeparam name="TUser">The user to authenticate with the API</typeparam>
            <param name="app">The app to add rest models to</param>
            <param name="route">The base route for rest models</param>
            <param name="optionsHandler">A handler to set options for this rest models API</param>
            <param name="routeOptionsHandler">A handler to set ASP.NET Core options</param>
            <returns>The same <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />, for chaining</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})">
            <summary>
                Adds rest models middleware to the app
            </summary>
            <typeparam name="TModel">The type of model to use with the API</typeparam>
            <typeparam name="TUser">The user to authenticate with the API</typeparam>
            <param name="app">The app to add rest models to</param>
            <param name="route">The base route for rest models</param>
            <param name="optionsHandler">A handler to set options for this rest models API</param>
            <returns>The same <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />, for chaining</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})">
            <summary>
                Adds rest models middleware to the app at the root ("/") endpoint
            </summary>
            <typeparam name="TModel">The type of model to use with the API</typeparam>
            <typeparam name="TUser">The user to authenticate with the API</typeparam>
            <param name="app">The app to add rest models to</param>
            <param name="optionsHandler">A handler to set options for this rest models API</param>
            <returns>The same <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />, for chaining</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})">
            <summary>
                Adds rest models middleware to the app
            </summary>
            <typeparam name="TModel">The type of model to use with the API</typeparam>
            <typeparam name="TUser">The user to authenticate with the API</typeparam>
            <param name="app">The app to add rest models to</param>
            <param name="route">The base route for rest models</param>
            <param name="optionsHandler">A handler to set options for this rest models API</param>
            <param name="routeOptionsHandler">A handler to set ASP.NET Core options</param>
            <returns>The same <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />, for chaining</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{``0,``1}}})">
            <summary>
                Adds rest models middleware to the app using already built <see cref="T:RestModels.Options.RestModelOptions`2" />. Not
                intended for application use.
            </summary>
            <typeparam name="TModel">The type of model to use with the API</typeparam>
            <typeparam name="TUser">The user to authenticate with the API</typeparam>
            <param name="app">The app to add rest models to</param>
            <param name="options">The options for rest models, keyed to their route patterns</param>
            <returns>The same <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder" />, for chaining</returns>
        </member>
    </members>
</doc>
