### YamlMime:ManagedReference
items:
- uid: RestModels.ExceptionHandlers.IExceptionHandler
  commentId: T:RestModels.ExceptionHandlers.IExceptionHandler
  id: IExceptionHandler
  parent: RestModels.ExceptionHandlers
  children:
  - RestModels.ExceptionHandlers.IExceptionHandler.HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)
  langs:
  - csharp
  - vb
  name: IExceptionHandler
  nameWithType: IExceptionHandler
  fullName: RestModels.ExceptionHandlers.IExceptionHandler
  type: Interface
  source:
    remote:
      path: RestModels/ExceptionHandlers/IExceptionHandler.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: IExceptionHandler
    path: ../../RestModels/ExceptionHandlers/IExceptionHandler.cs
    startLine: 17
  assemblies:
  - RestModels
  namespace: RestModels.ExceptionHandlers
  summary: "\nHandler for API exceptions\n"
  example: []
  syntax:
    content: public interface IExceptionHandler
    content.vb: Public Interface IExceptionHandler
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: RestModels.ExceptionHandlers.IExceptionHandler.HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)
  commentId: M:RestModels.ExceptionHandlers.IExceptionHandler.HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)
  id: HandleException(System.Exception,Microsoft.AspNetCore.Http.HttpContext,System.Boolean)
  parent: RestModels.ExceptionHandlers.IExceptionHandler
  langs:
  - csharp
  - vb
  name: HandleException(Exception, HttpContext, Boolean)
  nameWithType: IExceptionHandler.HandleException(Exception, HttpContext, Boolean)
  fullName: RestModels.ExceptionHandlers.IExceptionHandler.HandleException(System.Exception, Microsoft.AspNetCore.Http.HttpContext, System.Boolean)
  type: Method
  source:
    remote:
      path: RestModels/ExceptionHandlers/IExceptionHandler.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: HandleException
    path: ../../RestModels/ExceptionHandlers/IExceptionHandler.cs
    startLine: 28
  assemblies:
  - RestModels
  namespace: RestModels.ExceptionHandlers
  summary: "\nHandles API exceptions\n"
  example: []
  syntax:
    content: Task<bool?> HandleException(Exception exception, HttpContext context, bool hasNext)
    parameters:
    - id: exception
      type: System.Exception
      description: The exception that was thrown
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The current request context
    - id: hasNext
      type: System.Boolean
      description: <code>true</code> if there is another middleware registered for this route, <code>false</code> otherwise
    return:
      type: System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
      description: "\n<pre><code>true</code></pre> if the request should continue and attempt to use the next middleware registered for this\nroute, <pre><code>false</code></pre> to halt request execution, <pre><code>null</code></pre> to continue with the next exception handler.\n"
    content.vb: Function HandleException(exception As Exception, context As HttpContext, hasNext As Boolean) As Task(Of Boolean?)
  overload: RestModels.ExceptionHandlers.IExceptionHandler.HandleException*
references:
- uid: RestModels.ExceptionHandlers
  commentId: N:RestModels.ExceptionHandlers
  name: RestModels.ExceptionHandlers
  nameWithType: RestModels.ExceptionHandlers
  fullName: RestModels.ExceptionHandlers
- uid: RestModels.ExceptionHandlers.IExceptionHandler.HandleException*
  commentId: Overload:RestModels.ExceptionHandlers.IExceptionHandler.HandleException
  name: HandleException
  nameWithType: IExceptionHandler.HandleException
  fullName: RestModels.ExceptionHandlers.IExceptionHandler.HandleException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
  commentId: T:System.Threading.Tasks.Task{System.Nullable{System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Nullable<Boolean>>
  nameWithType: Task<Nullable<Boolean>>
  fullName: System.Threading.Tasks.Task<System.Nullable<System.Boolean>>
  nameWithType.vb: Task(Of Nullable(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of System.Nullable(Of System.Boolean))
  name.vb: Task(Of Nullable(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
