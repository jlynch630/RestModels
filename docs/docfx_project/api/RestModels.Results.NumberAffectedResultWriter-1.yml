### YamlMime:ManagedReference
items:
- uid: RestModels.Results.NumberAffectedResultWriter`1
  commentId: T:RestModels.Results.NumberAffectedResultWriter`1
  id: NumberAffectedResultWriter`1
  parent: RestModels.Results
  children:
  - RestModels.Results.NumberAffectedResultWriter`1.#ctor(System.String)
  - RestModels.Results.NumberAffectedResultWriter`1.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  - RestModels.Results.NumberAffectedResultWriter`1.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},System.Object,RestModels.Options.FormattingOptions)
  langs:
  - csharp
  - vb
  name: NumberAffectedResultWriter<TModel>
  nameWithType: NumberAffectedResultWriter<TModel>
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>
  type: Class
  source:
    remote:
      path: RestModels/Results/NumberAffectedResultWriter.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: NumberAffectedResultWriter
    path: ../../RestModels/Results/NumberAffectedResultWriter.cs
    startLine: 21
  assemblies:
  - RestModels
  namespace: RestModels.Results
  summary: "\nA result writer that simply writes the number of models affected by the request\n"
  example: []
  syntax:
    content: 'public class NumberAffectedResultWriter<TModel> : IResultWriter<TModel>, IResultWriter<TModel, object> where TModel : class'
    typeParameters:
    - id: TModel
      description: The type of model to format
    content.vb: >-
      Public Class NumberAffectedResultWriter(Of TModel As Class)

          Implements IResultWriter(Of TModel), IResultWriter(Of TModel, Object)
  inheritance:
  - System.Object
  implements:
  - RestModels.Results.IResultWriter{{TModel}}
  - RestModels.Results.IResultWriter{{TModel},System.Object}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: NumberAffectedResultWriter(Of TModel)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel)
  name.vb: NumberAffectedResultWriter(Of TModel)
- uid: RestModels.Results.NumberAffectedResultWriter`1.#ctor(System.String)
  commentId: M:RestModels.Results.NumberAffectedResultWriter`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: RestModels.Results.NumberAffectedResultWriter`1
  langs:
  - csharp
  - vb
  name: NumberAffectedResultWriter(String)
  nameWithType: NumberAffectedResultWriter<TModel>.NumberAffectedResultWriter(String)
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>.NumberAffectedResultWriter(System.String)
  type: Constructor
  source:
    remote:
      path: RestModels/Results/NumberAffectedResultWriter.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: .ctor
    path: ../../RestModels/Results/NumberAffectedResultWriter.cs
    startLine: 34
  assemblies:
  - RestModels
  namespace: RestModels.Results
  summary: Initializes a new instance of the <xref href="RestModels.Results.NumberAffectedResultWriter%601" data-throw-if-not-resolved="false"></xref> class.
  example: []
  syntax:
    content: public NumberAffectedResultWriter(string templateText = "{0}")
    parameters:
    - id: templateText
      type: System.String
      description: "\nThe text to use to format the response. All instances of &quot;{0}&quot; will be replaced with the\nnumber of models affected by the request\n"
    content.vb: Public Sub New(templateText As String = "{0}")
  overload: RestModels.Results.NumberAffectedResultWriter`1.#ctor*
  nameWithType.vb: NumberAffectedResultWriter(Of TModel).NumberAffectedResultWriter(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel).NumberAffectedResultWriter(System.String)
- uid: RestModels.Results.NumberAffectedResultWriter`1.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:RestModels.Results.NumberAffectedResultWriter`1.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  id: CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  parent: RestModels.Results.NumberAffectedResultWriter`1
  langs:
  - csharp
  - vb
  name: CanWriteAsync(HttpRequest)
  nameWithType: NumberAffectedResultWriter<TModel>.CanWriteAsync(HttpRequest)
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  type: Method
  source:
    remote:
      path: RestModels/Results/NumberAffectedResultWriter.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: CanWriteAsync
    path: ../../RestModels/Results/NumberAffectedResultWriter.cs
    startLine: 41
  assemblies:
  - RestModels
  namespace: RestModels.Results
  summary: "\nGets whether or not this <xref href=\"RestModels.Results.IResultWriter%602\" data-throw-if-not-resolved=\"false\"></xref> can write a result for the given request\n"
  example: []
  syntax:
    content: public Task<bool> CanWriteAsync(HttpRequest request)
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
      description: The request to test if a result can be written for it
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <pre><code>true</code></pre>
    content.vb: Public Function CanWriteAsync(request As HttpRequest) As Task(Of Boolean)
  overload: RestModels.Results.NumberAffectedResultWriter`1.CanWriteAsync*
  implements:
  - RestModels.Results.IResultWriter{{TModel},System.Object}.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  nameWithType.vb: NumberAffectedResultWriter(Of TModel).CanWriteAsync(HttpRequest)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel).CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
- uid: RestModels.Results.NumberAffectedResultWriter`1.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},System.Object,RestModels.Options.FormattingOptions)
  commentId: M:RestModels.Results.NumberAffectedResultWriter`1.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},System.Object,RestModels.Options.FormattingOptions)
  id: WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},System.Object,RestModels.Options.FormattingOptions)
  parent: RestModels.Results.NumberAffectedResultWriter`1
  langs:
  - csharp
  - vb
  name: WriteResultAsync(HttpContext, IEnumerable<TModel>, Object, FormattingOptions)
  nameWithType: NumberAffectedResultWriter<TModel>.WriteResultAsync(HttpContext, IEnumerable<TModel>, Object, FormattingOptions)
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable<TModel>, System.Object, RestModels.Options.FormattingOptions)
  type: Method
  source:
    remote:
      path: RestModels/Results/NumberAffectedResultWriter.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: WriteResultAsync
    path: ../../RestModels/Results/NumberAffectedResultWriter.cs
    startLine: 51
  assemblies:
  - RestModels
  namespace: RestModels.Results
  summary: "\nFormats the API result\n"
  example: []
  syntax:
    content: public Task WriteResultAsync(HttpContext context, IEnumerable<TModel> data, object user, FormattingOptions options)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The current request context
    - id: data
      type: System.Collections.Generic.IEnumerable{{TModel}}
      description: The dataset to format
    - id: user
      type: System.Object
      description: The current authenticated user context
    - id: options
      type: RestModels.Options.FormattingOptions
      description: Options for formatting the result
    return:
      type: System.Threading.Tasks.Task
      description: When the result has been sent
    content.vb: Public Function WriteResultAsync(context As HttpContext, data As IEnumerable(Of TModel), user As Object, options As FormattingOptions) As Task
  overload: RestModels.Results.NumberAffectedResultWriter`1.WriteResultAsync*
  implements:
  - RestModels.Results.IResultWriter{{TModel},System.Object}.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{{TModel}},System.Object,RestModels.Options.FormattingOptions)
  nameWithType.vb: NumberAffectedResultWriter(Of TModel).WriteResultAsync(HttpContext, IEnumerable(Of TModel), Object, FormattingOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel).WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable(Of TModel), System.Object, RestModels.Options.FormattingOptions)
  name.vb: WriteResultAsync(HttpContext, IEnumerable(Of TModel), Object, FormattingOptions)
references:
- uid: RestModels.Results
  commentId: N:RestModels.Results
  name: RestModels.Results
  nameWithType: RestModels.Results
  fullName: RestModels.Results
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RestModels.Results.IResultWriter{{TModel}}
  commentId: T:RestModels.Results.IResultWriter{`0}
  parent: RestModels.Results
  definition: RestModels.Results.IResultWriter`1
  name: IResultWriter<TModel>
  nameWithType: IResultWriter<TModel>
  fullName: RestModels.Results.IResultWriter<TModel>
  nameWithType.vb: IResultWriter(Of TModel)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel)
  name.vb: IResultWriter(Of TModel)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`1
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Results.IResultWriter`1
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Results.IResultWriter{{TModel},System.Object}
  commentId: T:RestModels.Results.IResultWriter{`0,System.Object}
  parent: RestModels.Results
  definition: RestModels.Results.IResultWriter`2
  name: IResultWriter<TModel, Object>
  nameWithType: IResultWriter<TModel, Object>
  fullName: RestModels.Results.IResultWriter<TModel, System.Object>
  nameWithType.vb: IResultWriter(Of TModel, Object)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel, System.Object)
  name.vb: IResultWriter(Of TModel, Object)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`2
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Results.IResultWriter`2
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RestModels.Results.IResultWriter`1
  commentId: T:RestModels.Results.IResultWriter`1
  name: IResultWriter<TModel>
  nameWithType: IResultWriter<TModel>
  fullName: RestModels.Results.IResultWriter<TModel>
  nameWithType.vb: IResultWriter(Of TModel)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel)
  name.vb: IResultWriter(Of TModel)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`1
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Results.IResultWriter`1
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Results.IResultWriter`2
  commentId: T:RestModels.Results.IResultWriter`2
  name: IResultWriter<TModel, TUser>
  nameWithType: IResultWriter<TModel, TUser>
  fullName: RestModels.Results.IResultWriter<TModel, TUser>
  nameWithType.vb: IResultWriter(Of TModel, TUser)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel, TUser)
  name.vb: IResultWriter(Of TModel, TUser)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`2
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Results.IResultWriter`2
    name: IResultWriter
    nameWithType: IResultWriter
    fullName: RestModels.Results.IResultWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Results.NumberAffectedResultWriter`1
  commentId: T:RestModels.Results.NumberAffectedResultWriter`1
  name: NumberAffectedResultWriter<TModel>
  nameWithType: NumberAffectedResultWriter<TModel>
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>
  nameWithType.vb: NumberAffectedResultWriter(Of TModel)
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel)
  name.vb: NumberAffectedResultWriter(Of TModel)
  spec.csharp:
  - uid: RestModels.Results.NumberAffectedResultWriter`1
    name: NumberAffectedResultWriter
    nameWithType: NumberAffectedResultWriter
    fullName: RestModels.Results.NumberAffectedResultWriter
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Results.NumberAffectedResultWriter`1
    name: NumberAffectedResultWriter
    nameWithType: NumberAffectedResultWriter
    fullName: RestModels.Results.NumberAffectedResultWriter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Results.NumberAffectedResultWriter`1.#ctor*
  commentId: Overload:RestModels.Results.NumberAffectedResultWriter`1.#ctor
  name: NumberAffectedResultWriter
  nameWithType: NumberAffectedResultWriter<TModel>.NumberAffectedResultWriter
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>.NumberAffectedResultWriter
  nameWithType.vb: NumberAffectedResultWriter(Of TModel).NumberAffectedResultWriter
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel).NumberAffectedResultWriter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: RestModels.Results.NumberAffectedResultWriter`1.CanWriteAsync*
  commentId: Overload:RestModels.Results.NumberAffectedResultWriter`1.CanWriteAsync
  name: CanWriteAsync
  nameWithType: NumberAffectedResultWriter<TModel>.CanWriteAsync
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>.CanWriteAsync
  nameWithType.vb: NumberAffectedResultWriter(Of TModel).CanWriteAsync
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel).CanWriteAsync
- uid: RestModels.Results.IResultWriter{{TModel},System.Object}.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:RestModels.Results.IResultWriter{`0,System.Object}.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  parent: RestModels.Results.IResultWriter{{TModel},System.Object}
  definition: RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  name: CanWriteAsync(HttpRequest)
  nameWithType: IResultWriter<TModel, Object>.CanWriteAsync(HttpRequest)
  fullName: RestModels.Results.IResultWriter<TModel, System.Object>.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  nameWithType.vb: IResultWriter(Of TModel, Object).CanWriteAsync(HttpRequest)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel, System.Object).CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
    name: CanWriteAsync
    nameWithType: IResultWriter<TModel, Object>.CanWriteAsync
    fullName: RestModels.Results.IResultWriter<TModel, System.Object>.CanWriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
    name: CanWriteAsync
    nameWithType: IResultWriter(Of TModel, Object).CanWriteAsync
    fullName: RestModels.Results.IResultWriter(Of TModel, System.Object).CanWriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  isExternal: true
  name: CanWriteAsync(HttpRequest)
  nameWithType: IResultWriter<TModel, TUser>.CanWriteAsync(HttpRequest)
  fullName: RestModels.Results.IResultWriter<TModel, TUser>.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  nameWithType.vb: IResultWriter(Of TModel, TUser).CanWriteAsync(HttpRequest)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel, TUser).CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
    name: CanWriteAsync
    nameWithType: IResultWriter<TModel, TUser>.CanWriteAsync
    fullName: RestModels.Results.IResultWriter<TModel, TUser>.CanWriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Results.IResultWriter`2.CanWriteAsync(Microsoft.AspNetCore.Http.HttpRequest)
    name: CanWriteAsync
    nameWithType: IResultWriter(Of TModel, TUser).CanWriteAsync
    fullName: RestModels.Results.IResultWriter(Of TModel, TUser).CanWriteAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: RestModels.Results.NumberAffectedResultWriter`1.WriteResultAsync*
  commentId: Overload:RestModels.Results.NumberAffectedResultWriter`1.WriteResultAsync
  name: WriteResultAsync
  nameWithType: NumberAffectedResultWriter<TModel>.WriteResultAsync
  fullName: RestModels.Results.NumberAffectedResultWriter<TModel>.WriteResultAsync
  nameWithType.vb: NumberAffectedResultWriter(Of TModel).WriteResultAsync
  fullName.vb: RestModels.Results.NumberAffectedResultWriter(Of TModel).WriteResultAsync
- uid: RestModels.Results.IResultWriter{{TModel},System.Object}.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{{TModel}},System.Object,RestModels.Options.FormattingOptions)
  commentId: M:RestModels.Results.IResultWriter{`0,System.Object}.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},System.Object,RestModels.Options.FormattingOptions)
  parent: RestModels.Results.IResultWriter{{TModel},System.Object}
  definition: RestModels.Results.IResultWriter`2.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},`1,RestModels.Options.FormattingOptions)
  name: WriteResultAsync(HttpContext, IEnumerable<TModel>, Object, FormattingOptions)
  nameWithType: IResultWriter<TModel, Object>.WriteResultAsync(HttpContext, IEnumerable<TModel>, Object, FormattingOptions)
  fullName: RestModels.Results.IResultWriter<TModel, System.Object>.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable<TModel>, System.Object, RestModels.Options.FormattingOptions)
  nameWithType.vb: IResultWriter(Of TModel, Object).WriteResultAsync(HttpContext, IEnumerable(Of TModel), Object, FormattingOptions)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel, System.Object).WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable(Of TModel), System.Object, RestModels.Options.FormattingOptions)
  name.vb: WriteResultAsync(HttpContext, IEnumerable(Of TModel), Object, FormattingOptions)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`2.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},`1,RestModels.Options.FormattingOptions)
    name: WriteResultAsync
    nameWithType: IResultWriter<TModel, Object>.WriteResultAsync
    fullName: RestModels.Results.IResultWriter<TModel, System.Object>.WriteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.FormattingOptions
    name: FormattingOptions
    nameWithType: FormattingOptions
    fullName: RestModels.Options.FormattingOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Results.IResultWriter`2.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},`1,RestModels.Options.FormattingOptions)
    name: WriteResultAsync
    nameWithType: IResultWriter(Of TModel, Object).WriteResultAsync
    fullName: RestModels.Results.IResultWriter(Of TModel, System.Object).WriteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.FormattingOptions
    name: FormattingOptions
    nameWithType: FormattingOptions
    fullName: RestModels.Options.FormattingOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Collections.Generic.IEnumerable{{TModel}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TModel>
  nameWithType: IEnumerable<TModel>
  fullName: System.Collections.Generic.IEnumerable<TModel>
  nameWithType.vb: IEnumerable(Of TModel)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TModel)
  name.vb: IEnumerable(Of TModel)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Options.FormattingOptions
  commentId: T:RestModels.Options.FormattingOptions
  parent: RestModels.Options
  name: FormattingOptions
  nameWithType: FormattingOptions
  fullName: RestModels.Options.FormattingOptions
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: RestModels.Results.IResultWriter`2.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},`1,RestModels.Options.FormattingOptions)
  commentId: M:RestModels.Results.IResultWriter`2.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},`1,RestModels.Options.FormattingOptions)
  isExternal: true
  name: WriteResultAsync(HttpContext, IEnumerable<TModel>, TUser, FormattingOptions)
  nameWithType: IResultWriter<TModel, TUser>.WriteResultAsync(HttpContext, IEnumerable<TModel>, TUser, FormattingOptions)
  fullName: RestModels.Results.IResultWriter<TModel, TUser>.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable<TModel>, TUser, RestModels.Options.FormattingOptions)
  nameWithType.vb: IResultWriter(Of TModel, TUser).WriteResultAsync(HttpContext, IEnumerable(Of TModel), TUser, FormattingOptions)
  fullName.vb: RestModels.Results.IResultWriter(Of TModel, TUser).WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext, System.Collections.Generic.IEnumerable(Of TModel), TUser, RestModels.Options.FormattingOptions)
  name.vb: WriteResultAsync(HttpContext, IEnumerable(Of TModel), TUser, FormattingOptions)
  spec.csharp:
  - uid: RestModels.Results.IResultWriter`2.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},`1,RestModels.Options.FormattingOptions)
    name: WriteResultAsync
    nameWithType: IResultWriter<TModel, TUser>.WriteResultAsync
    fullName: RestModels.Results.IResultWriter<TModel, TUser>.WriteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.FormattingOptions
    name: FormattingOptions
    nameWithType: FormattingOptions
    fullName: RestModels.Options.FormattingOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Results.IResultWriter`2.WriteResultAsync(Microsoft.AspNetCore.Http.HttpContext,System.Collections.Generic.IEnumerable{`0},`1,RestModels.Options.FormattingOptions)
    name: WriteResultAsync
    nameWithType: IResultWriter(Of TModel, TUser).WriteResultAsync
    fullName: RestModels.Results.IResultWriter(Of TModel, TUser).WriteResultAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.FormattingOptions
    name: FormattingOptions
    nameWithType: FormattingOptions
    fullName: RestModels.Options.FormattingOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: RestModels.Options
  commentId: N:RestModels.Options
  name: RestModels.Options
  nameWithType: RestModels.Options
  fullName: RestModels.Options
