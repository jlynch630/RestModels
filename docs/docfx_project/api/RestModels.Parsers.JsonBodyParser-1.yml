### YamlMime:ManagedReference
items:
- uid: RestModels.Parsers.JsonBodyParser`1
  commentId: T:RestModels.Parsers.JsonBodyParser`1
  id: JsonBodyParser`1
  parent: RestModels.Parsers
  children:
  - RestModels.Parsers.JsonBodyParser`1.#ctor
  - RestModels.Parsers.JsonBodyParser`1.#ctor(System.Text.Json.JsonSerializerOptions)
  - RestModels.Parsers.JsonBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  - RestModels.Parsers.JsonBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  langs:
  - csharp
  - vb
  name: JsonBodyParser<TModel>
  nameWithType: JsonBodyParser<TModel>
  fullName: RestModels.Parsers.JsonBodyParser<TModel>
  type: Class
  source:
    remote:
      path: RestModels/Parsers/JsonBodyParser.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: JsonBodyParser
    path: ../../RestModels/Parsers/JsonBodyParser.cs
    startLine: 21
  assemblies:
  - RestModels
  namespace: RestModels.Parsers
  summary: "\nBody parser that accepts JSON request bodies\n"
  example: []
  syntax:
    content: 'public class JsonBodyParser<TModel> : IBodyParser<TModel> where TModel : class'
    typeParameters:
    - id: TModel
      description: The type of model to parse
    content.vb: >-
      Public Class JsonBodyParser(Of TModel As Class)

          Implements IBodyParser(Of TModel)
  inheritance:
  - System.Object
  implements:
  - RestModels.Parsers.IBodyParser{{TModel}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: JsonBodyParser(Of TModel)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel)
  name.vb: JsonBodyParser(Of TModel)
- uid: RestModels.Parsers.JsonBodyParser`1.#ctor
  commentId: M:RestModels.Parsers.JsonBodyParser`1.#ctor
  id: '#ctor'
  parent: RestModels.Parsers.JsonBodyParser`1
  langs:
  - csharp
  - vb
  name: JsonBodyParser()
  nameWithType: JsonBodyParser<TModel>.JsonBodyParser()
  fullName: RestModels.Parsers.JsonBodyParser<TModel>.JsonBodyParser()
  type: Constructor
  source:
    remote:
      path: RestModels/Parsers/JsonBodyParser.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: .ctor
    path: ../../RestModels/Parsers/JsonBodyParser.cs
    startLine: 35
  assemblies:
  - RestModels
  namespace: RestModels.Parsers
  summary: "\nInitializes a new instance of the <xref href=\"RestModels.Parsers.JsonBodyParser%601\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public JsonBodyParser()
    content.vb: Public Sub New
  overload: RestModels.Parsers.JsonBodyParser`1.#ctor*
  nameWithType.vb: JsonBodyParser(Of TModel).JsonBodyParser()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel).JsonBodyParser()
- uid: RestModels.Parsers.JsonBodyParser`1.#ctor(System.Text.Json.JsonSerializerOptions)
  commentId: M:RestModels.Parsers.JsonBodyParser`1.#ctor(System.Text.Json.JsonSerializerOptions)
  id: '#ctor(System.Text.Json.JsonSerializerOptions)'
  parent: RestModels.Parsers.JsonBodyParser`1
  langs:
  - csharp
  - vb
  name: JsonBodyParser(JsonSerializerOptions)
  nameWithType: JsonBodyParser<TModel>.JsonBodyParser(JsonSerializerOptions)
  fullName: RestModels.Parsers.JsonBodyParser<TModel>.JsonBodyParser(System.Text.Json.JsonSerializerOptions)
  type: Constructor
  source:
    remote:
      path: RestModels/Parsers/JsonBodyParser.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: .ctor
    path: ../../RestModels/Parsers/JsonBodyParser.cs
    startLine: 42
  assemblies:
  - RestModels
  namespace: RestModels.Parsers
  summary: "\nInitializes a new instance of the <xref href=\"RestModels.Parsers.JsonBodyParser%601\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public JsonBodyParser(JsonSerializerOptions serializerOptions)
    parameters:
    - id: serializerOptions
      type: System.Text.Json.JsonSerializerOptions
      description: Options for the JSON serializer
    content.vb: Public Sub New(serializerOptions As JsonSerializerOptions)
  overload: RestModels.Parsers.JsonBodyParser`1.#ctor*
  nameWithType.vb: JsonBodyParser(Of TModel).JsonBodyParser(JsonSerializerOptions)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel).JsonBodyParser(System.Text.Json.JsonSerializerOptions)
- uid: RestModels.Parsers.JsonBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:RestModels.Parsers.JsonBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  id: CanParse(Microsoft.AspNetCore.Http.HttpContext)
  parent: RestModels.Parsers.JsonBodyParser`1
  langs:
  - csharp
  - vb
  name: CanParse(HttpContext)
  nameWithType: JsonBodyParser<TModel>.CanParse(HttpContext)
  fullName: RestModels.Parsers.JsonBodyParser<TModel>.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: RestModels/Parsers/JsonBodyParser.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: CanParse
    path: ../../RestModels/Parsers/JsonBodyParser.cs
    startLine: 52
  assemblies:
  - RestModels
  namespace: RestModels.Parsers
  summary: "\nGets whether or not the request body can be parsed by this <xref href=\"RestModels.Parsers.IBodyParser%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public Task<bool> CanParse(HttpContext context)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The context for the HTTP request
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the request body can be parsed by this <xref href="RestModels.Parsers.IBodyParser%601" data-throw-if-not-resolved="false"></xref>, <code>false</code> otherwise
    content.vb: Public Function CanParse(context As HttpContext) As Task(Of Boolean)
  overload: RestModels.Parsers.JsonBodyParser`1.CanParse*
  implements:
  - RestModels.Parsers.IBodyParser{{TModel}}.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: JsonBodyParser(Of TModel).CanParse(HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel).CanParse(Microsoft.AspNetCore.Http.HttpContext)
- uid: RestModels.Parsers.JsonBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:RestModels.Parsers.JsonBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  id: Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  parent: RestModels.Parsers.JsonBodyParser`1
  langs:
  - csharp
  - vb
  name: Parse(Byte[], ParserOptions, HttpContext)
  nameWithType: JsonBodyParser<TModel>.Parse(Byte[], ParserOptions, HttpContext)
  fullName: RestModels.Parsers.JsonBodyParser<TModel>.Parse(System.Byte[], RestModels.Options.ParserOptions, Microsoft.AspNetCore.Http.HttpContext)
  type: Method
  source:
    remote:
      path: RestModels/Parsers/JsonBodyParser.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: Parse
    path: ../../RestModels/Parsers/JsonBodyParser.cs
    startLine: 61
  assemblies:
  - RestModels
  namespace: RestModels.Parsers
  summary: "\nParses a request body\n"
  example: []
  syntax:
    content: public Task<ParseResult<TModel>[]> Parse(byte[] body, ParserOptions options, HttpContext context)
    parameters:
    - id: body
      type: System.Byte[]
      description: The data of the request body
    - id: options
      type: RestModels.Options.ParserOptions
      description: Options for the parser
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
      description: The context for the HTTP request
    return:
      type: System.Threading.Tasks.Task{RestModels.Parsers.ParseResult{{TModel}}[]}
      description: The parsed object
    content.vb: Public Function Parse(body As Byte(), options As ParserOptions, context As HttpContext) As Task(Of ParseResult(Of TModel)())
  overload: RestModels.Parsers.JsonBodyParser`1.Parse*
  implements:
  - RestModels.Parsers.IBodyParser{{TModel}}.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: JsonBodyParser(Of TModel).Parse(Byte(), ParserOptions, HttpContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel).Parse(System.Byte(), RestModels.Options.ParserOptions, Microsoft.AspNetCore.Http.HttpContext)
  name.vb: Parse(Byte(), ParserOptions, HttpContext)
references:
- uid: RestModels.Parsers
  commentId: N:RestModels.Parsers
  name: RestModels.Parsers
  nameWithType: RestModels.Parsers
  fullName: RestModels.Parsers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: RestModels.Parsers.IBodyParser{{TModel}}
  commentId: T:RestModels.Parsers.IBodyParser{`0}
  parent: RestModels.Parsers
  definition: RestModels.Parsers.IBodyParser`1
  name: IBodyParser<TModel>
  nameWithType: IBodyParser<TModel>
  fullName: RestModels.Parsers.IBodyParser<TModel>
  nameWithType.vb: IBodyParser(Of TModel)
  fullName.vb: RestModels.Parsers.IBodyParser(Of TModel)
  name.vb: IBodyParser(Of TModel)
  spec.csharp:
  - uid: RestModels.Parsers.IBodyParser`1
    name: IBodyParser
    nameWithType: IBodyParser
    fullName: RestModels.Parsers.IBodyParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Parsers.IBodyParser`1
    name: IBodyParser
    nameWithType: IBodyParser
    fullName: RestModels.Parsers.IBodyParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RestModels.Parsers.IBodyParser`1
  commentId: T:RestModels.Parsers.IBodyParser`1
  name: IBodyParser<TModel>
  nameWithType: IBodyParser<TModel>
  fullName: RestModels.Parsers.IBodyParser<TModel>
  nameWithType.vb: IBodyParser(Of TModel)
  fullName.vb: RestModels.Parsers.IBodyParser(Of TModel)
  name.vb: IBodyParser(Of TModel)
  spec.csharp:
  - uid: RestModels.Parsers.IBodyParser`1
    name: IBodyParser
    nameWithType: IBodyParser
    fullName: RestModels.Parsers.IBodyParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Parsers.IBodyParser`1
    name: IBodyParser
    nameWithType: IBodyParser
    fullName: RestModels.Parsers.IBodyParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Parsers.JsonBodyParser`1
  commentId: T:RestModels.Parsers.JsonBodyParser`1
  name: JsonBodyParser<TModel>
  nameWithType: JsonBodyParser<TModel>
  fullName: RestModels.Parsers.JsonBodyParser<TModel>
  nameWithType.vb: JsonBodyParser(Of TModel)
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel)
  name.vb: JsonBodyParser(Of TModel)
  spec.csharp:
  - uid: RestModels.Parsers.JsonBodyParser`1
    name: JsonBodyParser
    nameWithType: JsonBodyParser
    fullName: RestModels.Parsers.JsonBodyParser
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Parsers.JsonBodyParser`1
    name: JsonBodyParser
    nameWithType: JsonBodyParser
    fullName: RestModels.Parsers.JsonBodyParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Parsers.JsonBodyParser`1.#ctor*
  commentId: Overload:RestModels.Parsers.JsonBodyParser`1.#ctor
  name: JsonBodyParser
  nameWithType: JsonBodyParser<TModel>.JsonBodyParser
  fullName: RestModels.Parsers.JsonBodyParser<TModel>.JsonBodyParser
  nameWithType.vb: JsonBodyParser(Of TModel).JsonBodyParser
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel).JsonBodyParser
- uid: System.Text.Json.JsonSerializerOptions
  commentId: T:System.Text.Json.JsonSerializerOptions
  parent: System.Text.Json
  isExternal: true
  name: JsonSerializerOptions
  nameWithType: JsonSerializerOptions
  fullName: System.Text.Json.JsonSerializerOptions
- uid: System.Text.Json
  commentId: N:System.Text.Json
  isExternal: true
  name: System.Text.Json
  nameWithType: System.Text.Json
  fullName: System.Text.Json
- uid: RestModels.Parsers.JsonBodyParser`1.CanParse*
  commentId: Overload:RestModels.Parsers.JsonBodyParser`1.CanParse
  name: CanParse
  nameWithType: JsonBodyParser<TModel>.CanParse
  fullName: RestModels.Parsers.JsonBodyParser<TModel>.CanParse
  nameWithType.vb: JsonBodyParser(Of TModel).CanParse
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel).CanParse
- uid: RestModels.Parsers.IBodyParser{{TModel}}.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:RestModels.Parsers.IBodyParser{`0}.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  parent: RestModels.Parsers.IBodyParser{{TModel}}
  definition: RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  name: CanParse(HttpContext)
  nameWithType: IBodyParser<TModel>.CanParse(HttpContext)
  fullName: RestModels.Parsers.IBodyParser<TModel>.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: IBodyParser(Of TModel).CanParse(HttpContext)
  fullName.vb: RestModels.Parsers.IBodyParser(Of TModel).CanParse(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
    name: CanParse
    nameWithType: IBodyParser<TModel>.CanParse
    fullName: RestModels.Parsers.IBodyParser<TModel>.CanParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
    name: CanParse
    nameWithType: IBodyParser(Of TModel).CanParse
    fullName: RestModels.Parsers.IBodyParser(Of TModel).CanParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  isExternal: true
  name: CanParse(HttpContext)
  nameWithType: IBodyParser<TModel>.CanParse(HttpContext)
  fullName: RestModels.Parsers.IBodyParser<TModel>.CanParse(Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: IBodyParser(Of TModel).CanParse(HttpContext)
  fullName.vb: RestModels.Parsers.IBodyParser(Of TModel).CanParse(Microsoft.AspNetCore.Http.HttpContext)
  spec.csharp:
  - uid: RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
    name: CanParse
    nameWithType: IBodyParser<TModel>.CanParse
    fullName: RestModels.Parsers.IBodyParser<TModel>.CanParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Parsers.IBodyParser`1.CanParse(Microsoft.AspNetCore.Http.HttpContext)
    name: CanParse
    nameWithType: IBodyParser(Of TModel).CanParse
    fullName: RestModels.Parsers.IBodyParser(Of TModel).CanParse
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: RestModels.Parsers.JsonBodyParser`1.Parse*
  commentId: Overload:RestModels.Parsers.JsonBodyParser`1.Parse
  name: Parse
  nameWithType: JsonBodyParser<TModel>.Parse
  fullName: RestModels.Parsers.JsonBodyParser<TModel>.Parse
  nameWithType.vb: JsonBodyParser(Of TModel).Parse
  fullName.vb: RestModels.Parsers.JsonBodyParser(Of TModel).Parse
- uid: RestModels.Parsers.IBodyParser{{TModel}}.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:RestModels.Parsers.IBodyParser{`0}.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  parent: RestModels.Parsers.IBodyParser{{TModel}}
  definition: RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  name: Parse(Byte[], ParserOptions, HttpContext)
  nameWithType: IBodyParser<TModel>.Parse(Byte[], ParserOptions, HttpContext)
  fullName: RestModels.Parsers.IBodyParser<TModel>.Parse(System.Byte[], RestModels.Options.ParserOptions, Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: IBodyParser(Of TModel).Parse(Byte(), ParserOptions, HttpContext)
  fullName.vb: RestModels.Parsers.IBodyParser(Of TModel).Parse(System.Byte(), RestModels.Options.ParserOptions, Microsoft.AspNetCore.Http.HttpContext)
  name.vb: Parse(Byte(), ParserOptions, HttpContext)
  spec.csharp:
  - uid: RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
    name: Parse
    nameWithType: IBodyParser<TModel>.Parse
    fullName: RestModels.Parsers.IBodyParser<TModel>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.ParserOptions
    name: ParserOptions
    nameWithType: ParserOptions
    fullName: RestModels.Options.ParserOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
    name: Parse
    nameWithType: IBodyParser(Of TModel).Parse
    fullName: RestModels.Parsers.IBodyParser(Of TModel).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.ParserOptions
    name: ParserOptions
    nameWithType: ParserOptions
    fullName: RestModels.Options.ParserOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RestModels.Options.ParserOptions
  commentId: T:RestModels.Options.ParserOptions
  parent: RestModels.Options
  name: ParserOptions
  nameWithType: ParserOptions
  fullName: RestModels.Options.ParserOptions
- uid: System.Threading.Tasks.Task{RestModels.Parsers.ParseResult{{TModel}}[]}
  commentId: T:System.Threading.Tasks.Task{RestModels.Parsers.ParseResult{`0}[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ParseResult<TModel>[]>
  nameWithType: Task<ParseResult<TModel>[]>
  fullName: System.Threading.Tasks.Task<RestModels.Parsers.ParseResult<TModel>[]>
  nameWithType.vb: Task(Of ParseResult(Of TModel)())
  fullName.vb: System.Threading.Tasks.Task(Of RestModels.Parsers.ParseResult(Of TModel)())
  name.vb: Task(Of ParseResult(Of TModel)())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RestModels.Parsers.ParseResult`1
    name: ParseResult
    nameWithType: ParseResult
    fullName: RestModels.Parsers.ParseResult
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RestModels.Parsers.ParseResult`1
    name: ParseResult
    nameWithType: ParseResult
    fullName: RestModels.Parsers.ParseResult
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  commentId: M:RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
  isExternal: true
  name: Parse(Byte[], ParserOptions, HttpContext)
  nameWithType: IBodyParser<TModel>.Parse(Byte[], ParserOptions, HttpContext)
  fullName: RestModels.Parsers.IBodyParser<TModel>.Parse(System.Byte[], RestModels.Options.ParserOptions, Microsoft.AspNetCore.Http.HttpContext)
  nameWithType.vb: IBodyParser(Of TModel).Parse(Byte(), ParserOptions, HttpContext)
  fullName.vb: RestModels.Parsers.IBodyParser(Of TModel).Parse(System.Byte(), RestModels.Options.ParserOptions, Microsoft.AspNetCore.Http.HttpContext)
  name.vb: Parse(Byte(), ParserOptions, HttpContext)
  spec.csharp:
  - uid: RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
    name: Parse
    nameWithType: IBodyParser<TModel>.Parse
    fullName: RestModels.Parsers.IBodyParser<TModel>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.ParserOptions
    name: ParserOptions
    nameWithType: ParserOptions
    fullName: RestModels.Options.ParserOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Parsers.IBodyParser`1.Parse(System.Byte[],RestModels.Options.ParserOptions,Microsoft.AspNetCore.Http.HttpContext)
    name: Parse
    nameWithType: IBodyParser(Of TModel).Parse
    fullName: RestModels.Parsers.IBodyParser(Of TModel).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: RestModels.Options.ParserOptions
    name: ParserOptions
    nameWithType: ParserOptions
    fullName: RestModels.Options.ParserOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: Microsoft.AspNetCore.Http.HttpContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Options
  commentId: N:RestModels.Options
  name: RestModels.Options
  nameWithType: RestModels.Options
  fullName: RestModels.Options
