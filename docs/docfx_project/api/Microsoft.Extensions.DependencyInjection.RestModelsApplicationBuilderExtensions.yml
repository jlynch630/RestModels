### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions
  id: RestModelsApplicationBuilderExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{``0,``1}}})
  - Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})
  langs:
  - csharp
  - vb
  name: RestModelsApplicationBuilderExtensions
  nameWithType: RestModelsApplicationBuilderExtensions
  fullName: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions
  type: Class
  source:
    remote:
      path: RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: RestModelsApplicationBuilderExtensions
    path: ../../RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
    startLine: 24
  assemblies:
  - RestModels
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nExtension methods for the <xref href=\"Microsoft.AspNetCore.Builder.IApplicationBuilder\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: public static class RestModelsApplicationBuilderExtensions
    content.vb: Public Module RestModelsApplicationBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseRestModels<TModel, TUser>(IApplicationBuilder, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(IApplicationBuilder, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: UseRestModels
    path: ../../RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
    startLine: 34
  assemblies:
  - RestModels
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds rest models middleware to the app\n"
  example: []
  syntax:
    content: >-
      public static IApplicationBuilder UseRestModels<TModel, TUser>(this IApplicationBuilder app, string route, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The app to add rest models to
    - id: route
      type: System.String
      description: The base route for rest models
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler to set options for this rest models API
    typeParameters:
    - id: TModel
      description: The type of model to use with the API
    - id: TUser
      description: The user to authenticate with the API
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The same <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref>, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseRestModels(Of TModel As Class, TUser As Class)(app As IApplicationBuilder, route As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As IApplicationBuilder
  overload: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels*
  nameWithType.vb: RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(IApplicationBuilder, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: UseRestModels(Of TModel, TUser)(IApplicationBuilder, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseRestModels<TModel, TUser>(IApplicationBuilder, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(IApplicationBuilder, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: UseRestModels
    path: ../../RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
    startLine: 49
  assemblies:
  - RestModels
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds rest models middleware to the app at the root (&quot;/&quot;) endpoint\n"
  example: []
  syntax:
    content: >-
      public static IApplicationBuilder UseRestModels<TModel, TUser>(this IApplicationBuilder app, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The app to add rest models to
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler to set options for this rest models API
    typeParameters:
    - id: TModel
      description: The type of model to use with the API
    - id: TUser
      description: The user to authenticate with the API
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The same <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref>, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseRestModels(Of TModel As Class, TUser As Class)(app As IApplicationBuilder, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As IApplicationBuilder
  overload: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels*
  nameWithType.vb: RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(IApplicationBuilder, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: UseRestModels(Of TModel, TUser)(IApplicationBuilder, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})
  commentId: M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})
  id: UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}},System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseRestModels<TModel, TUser>(IApplicationBuilder, String, Action<RestModelOptionsBuilder<TModel, TUser>>, Action<IEndpointConventionBuilder>)
  nameWithType: RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(IApplicationBuilder, String, Action<RestModelOptionsBuilder<TModel, TUser>>, Action<IEndpointConventionBuilder>)
  fullName: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>, System.Action<Microsoft.AspNetCore.Builder.IEndpointConventionBuilder>)
  type: Method
  source:
    remote:
      path: RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: UseRestModels
    path: ../../RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
    startLine: 65
  assemblies:
  - RestModels
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds rest models middleware to the app\n"
  example: []
  syntax:
    content: >-
      public static IApplicationBuilder UseRestModels<TModel, TUser>(this IApplicationBuilder app, string route, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler, Action<IEndpointConventionBuilder> routeOptionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The app to add rest models to
    - id: route
      type: System.String
      description: The base route for rest models
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler to set options for this rest models API
    - id: routeOptionsHandler
      type: System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder}
      description: A handler to set ASP.NET Core options
    typeParameters:
    - id: TModel
      description: The type of model to use with the API
    - id: TUser
      description: The user to authenticate with the API
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The same <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref>, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseRestModels(Of TModel As Class, TUser As Class)(app As IApplicationBuilder, route As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)), routeOptionsHandler As Action(Of IEndpointConventionBuilder)) As IApplicationBuilder
  overload: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels*
  nameWithType.vb: RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(IApplicationBuilder, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)), Action(Of IEndpointConventionBuilder))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)), System.Action(Of Microsoft.AspNetCore.Builder.IEndpointConventionBuilder))
  name.vb: UseRestModels(Of TModel, TUser)(IApplicationBuilder, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)), Action(Of IEndpointConventionBuilder))
- uid: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{``0,``1}}})
  commentId: M:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{``0,``1}}})
  id: UseRestModels``2(Microsoft.AspNetCore.Builder.IApplicationBuilder,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{``0,``1}}})
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseRestModels<TModel, TUser>(IApplicationBuilder, Dictionary<String, List<RestModelOptions<TModel, TUser>>>)
  nameWithType: RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(IApplicationBuilder, Dictionary<String, List<RestModelOptions<TModel, TUser>>>)
  fullName: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels<TModel, TUser>(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<RestModels.Options.RestModelOptions<TModel, TUser>>>)
  type: Method
  source:
    remote:
      path: RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: UseRestModels
    path: ../../RestModels/Extensions/RestModelsApplicationBuilderExtensions.cs
    startLine: 86
  assemblies:
  - RestModels
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nAdds rest models middleware to the app using already built <xref href=\"RestModels.Options.RestModelOptions%602\" data-throw-if-not-resolved=\"false\"></xref>. Not\nintended for application use.\n"
  example: []
  syntax:
    content: >-
      public static IApplicationBuilder UseRestModels<TModel, TUser>(this IApplicationBuilder app, Dictionary<string, List<RestModelOptions<TModel, TUser>>> options)

          where TModel : class where TUser : class
    parameters:
    - id: app
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The app to add rest models to
    - id: options
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{{TModel},{TUser}}}}
      description: The options for rest models, keyed to their route patterns
    typeParameters:
    - id: TModel
      description: The type of model to use with the API
    - id: TUser
      description: The user to authenticate with the API
    return:
      type: Microsoft.AspNetCore.Builder.IApplicationBuilder
      description: The same <xref href="Microsoft.AspNetCore.Builder.IApplicationBuilder" data-throw-if-not-resolved="false"></xref>, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseRestModels(Of TModel As Class, TUser As Class)(app As IApplicationBuilder, options As Dictionary(Of String, List(Of RestModelOptions(Of TModel, TUser)))) As IApplicationBuilder
  overload: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels*
  nameWithType.vb: RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(IApplicationBuilder, Dictionary(Of String, List(Of RestModelOptions(Of TModel, TUser))))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels(Of TModel, TUser)(Microsoft.AspNetCore.Builder.IApplicationBuilder, System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of RestModels.Options.RestModelOptions(Of TModel, TUser))))
  name.vb: UseRestModels(Of TModel, TUser)(IApplicationBuilder, Dictionary(Of String, List(Of RestModelOptions(Of TModel, TUser))))
references:
- uid: Microsoft.AspNetCore.Builder.IApplicationBuilder
  commentId: T:Microsoft.AspNetCore.Builder.IApplicationBuilder
  parent: Microsoft.AspNetCore.Builder
  isExternal: true
  name: IApplicationBuilder
  nameWithType: IApplicationBuilder
  fullName: Microsoft.AspNetCore.Builder.IApplicationBuilder
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Builder
  commentId: N:Microsoft.AspNetCore.Builder
  isExternal: true
  name: Microsoft.AspNetCore.Builder
  nameWithType: Microsoft.AspNetCore.Builder
  fullName: Microsoft.AspNetCore.Builder
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels
  name: UseRestModels
  nameWithType: RestModelsApplicationBuilderExtensions.UseRestModels
  fullName: Microsoft.Extensions.DependencyInjection.RestModelsApplicationBuilderExtensions.UseRestModels
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
  commentId: T:System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}}
  parent: System
  definition: System.Action`1
  name: Action<RestModelOptionsBuilder<TModel, TUser>>
  nameWithType: Action<RestModelOptionsBuilder<TModel, TUser>>
  fullName: System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>
  nameWithType.vb: Action(Of RestModelOptionsBuilder(Of TModel, TUser))
  fullName.vb: System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: Action(Of RestModelOptionsBuilder(Of TModel, TUser))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder}
  commentId: T:System.Action{Microsoft.AspNetCore.Builder.IEndpointConventionBuilder}
  parent: System
  definition: System.Action`1
  name: Action<IEndpointConventionBuilder>
  nameWithType: Action<IEndpointConventionBuilder>
  fullName: System.Action<Microsoft.AspNetCore.Builder.IEndpointConventionBuilder>
  nameWithType.vb: Action(Of IEndpointConventionBuilder)
  fullName.vb: System.Action(Of Microsoft.AspNetCore.Builder.IEndpointConventionBuilder)
  name.vb: Action(Of IEndpointConventionBuilder)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Builder.IEndpointConventionBuilder
    name: IEndpointConventionBuilder
    nameWithType: IEndpointConventionBuilder
    fullName: Microsoft.AspNetCore.Builder.IEndpointConventionBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Builder.IEndpointConventionBuilder
    name: IEndpointConventionBuilder
    nameWithType: IEndpointConventionBuilder
    fullName: Microsoft.AspNetCore.Builder.IEndpointConventionBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Options.RestModelOptions`2
  commentId: T:RestModels.Options.RestModelOptions`2
  name: RestModelOptions<TModel, TUser>
  nameWithType: RestModelOptions<TModel, TUser>
  fullName: RestModels.Options.RestModelOptions<TModel, TUser>
  nameWithType.vb: RestModelOptions(Of TModel, TUser)
  fullName.vb: RestModels.Options.RestModelOptions(Of TModel, TUser)
  name.vb: RestModelOptions(Of TModel, TUser)
  spec.csharp:
  - uid: RestModels.Options.RestModelOptions`2
    name: RestModelOptions
    nameWithType: RestModelOptions
    fullName: RestModels.Options.RestModelOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Options.RestModelOptions`2
    name: RestModelOptions
    nameWithType: RestModelOptions
    fullName: RestModels.Options.RestModelOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{{TModel},{TUser}}}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{RestModels.Options.RestModelOptions{`0,`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<RestModelOptions<TModel, TUser>>>
  nameWithType: Dictionary<String, List<RestModelOptions<TModel, TUser>>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<RestModels.Options.RestModelOptions<TModel, TUser>>>
  nameWithType.vb: Dictionary(Of String, List(Of RestModelOptions(Of TModel, TUser)))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of RestModels.Options.RestModelOptions(Of TModel, TUser)))
  name.vb: Dictionary(Of String, List(Of RestModelOptions(Of TModel, TUser)))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RestModels.Options.RestModelOptions`2
    name: RestModelOptions
    nameWithType: RestModelOptions
    fullName: RestModels.Options.RestModelOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RestModels.Options.RestModelOptions`2
    name: RestModelOptions
    nameWithType: RestModelOptions
    fullName: RestModels.Options.RestModelOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
