### YamlMime:ManagedReference
items:
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  commentId: T:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  id: RestModelOptionsBuilderExtensions
  parent: RestModels.EntityFramework.Extensions
  children:
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},RestModels.ParameterRetrievers.ParameterRetriever[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  - RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  langs:
  - csharp
  - vb
  name: RestModelOptionsBuilderExtensions
  nameWithType: RestModelOptionsBuilderExtensions
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  type: Class
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: RestModelOptionsBuilderExtensions
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 22
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nExtension methods for the <xref href=\"RestModels.Options.Builder.RestModelOptionsBuilder%602\" data-throw-if-not-resolved=\"false\"></xref> class\n"
  example: []
  syntax:
    content: public static class RestModelOptionsBuilderExtensions
    content.vb: Public Module RestModelOptionsBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: IgnorePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: IgnorePrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.IgnorePrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: IgnorePrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 40
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nEnsures that the primary key of the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TModel</code> will not be parsed from the request body\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> IgnorePrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IgnorePrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.IgnorePrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: IgnorePrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: IncludePrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: IncludePrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.IncludePrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: IncludePrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 55
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nEnsures that the primary key of the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TModel</code> will be included in the response body\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> IncludePrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IncludePrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.IncludePrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: IncludePrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: OmitPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: OmitPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.OmitPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: OmitPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 71
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nEnsures that the primary key of the <code data-dev-comment-type=\"typeparamref\" class=\"typeparamref\">TModel</code> will be omitted from the response body\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> OmitPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function OmitPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.OmitPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: OmitPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},RestModels.ParameterRetrievers.ParameterRetriever[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},RestModels.ParameterRetrievers.ParameterRetriever[])
  id: FilterByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},RestModels.ParameterRetrievers.ParameterRetriever[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: FilterByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, ParameterRetriever[])
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, ParameterRetriever[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, RestModels.ParameterRetrievers.ParameterRetriever[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: FilterByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 88
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nFilter&apos;s this route&apos;s dataset by a request parameter that is compared to the primary key of the model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> FilterByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params ParameterRetriever[] parameters)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: parameters
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters to filter by
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FilterByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray parameters As ParameterRetriever()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.FilterByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), ParameterRetriever())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), RestModels.ParameterRetrievers.ParameterRetriever())
  name.vb: FilterByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), ParameterRetriever())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  id: FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: FilterByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String[])
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: FilterByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 106
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nFilter&apos;s this route&apos;s dataset by query parameters compared to the primary key of the model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> FilterByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params string[] parameterNames)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: parameterNames
      type: System.String[]
      description: The names of the query parameters to filter by
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FilterByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray parameterNames As String()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String())
  name.vb: FilterByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: FilterByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: FilterByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: FilterByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 122
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nFilter&apos;s this route&apos;s dataset by query parameters compared to the primary key of the model. The query parameters&apos;\nnames will be camelCased versions of their C# property name\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> FilterByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FilterByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: FilterByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  id: FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: FilterByPrimaryKeyRoute<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String[])
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: FilterByPrimaryKeyRoute
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 135
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nFilter&apos;s this route&apos;s dataset by route values compared to the primary key of the model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> FilterByPrimaryKeyRoute<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params string[] parameterNames)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: parameterNames
      type: System.String[]
      description: The names of the query parameters to filter by
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FilterByPrimaryKeyRoute(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray parameterNames As String()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute*
  nameWithType.vb: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String())
  name.vb: FilterByPrimaryKeyRoute(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: FilterByPrimaryKeyRoute``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: FilterByPrimaryKeyRoute<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: FilterByPrimaryKeyRoute
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.cs
    startLine: 151
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nFilter&apos;s this route&apos;s dataset by route values compared to the primary key of the model. The query parameters&apos; names\nwill be camelCased versions of their C# property name\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> FilterByPrimaryKeyRoute<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FilterByPrimaryKeyRoute(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute*
  nameWithType.vb: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: FilterByPrimaryKeyRoute(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: Delete``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: Delete<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.Delete<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: Delete
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 35
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request using Entity Framework\n"
  remarks: "\nIf not used with any filters, this route will drop all models in the dataset\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> Delete<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Delete(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete*
  nameWithType.vb: RestModelOptionsBuilderExtensions.Delete(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: Delete(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 60
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE by primary key request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameters
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters that will make up the primary key to filter by
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 84
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 107
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by route values using Entity Framework. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 123
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by route values using Entity Framework. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 151
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by route values using Entity Framework. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 178
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 197
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by query parameters using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 221
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by a primary key query parameter using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 240
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by query parameters using Entity Framework. The names of the query\nparameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: DeleteByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: DeleteByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Delete.cs
    startLine: 259
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a DELETE request by query parameters on the same route pattern using Entity Framework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> DeleteByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function DeleteByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: DeleteByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: Get<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.Get<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: Get
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 31
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request using Entity Framework\n"
  remarks: This function just calls <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602.SetupGet(System.String%2cSystem.Action%7bRestModels.Options.Builder.RestModelOptionsBuilder%7b%600%2c%601%7d%7d)" data-throw-if-not-resolved="false"></xref>, just makes GET requests more consistent in Entity Framework with the other requests
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> Get<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get*
  nameWithType.vb: RestModelOptionsBuilderExtensions.Get(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: Get(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: Get<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.Get<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: Get
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 48
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request using Entity Framework\n"
  remarks: This function simply calls <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602.SetupGet(System.Action%7bRestModels.Options.Builder.RestModelOptionsBuilder%7b%600%2c%601%7d%7d)" data-throw-if-not-resolved="false"></xref>, makes GET requests more consistent in Entity Framework with the other requests
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> Get<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get*
  nameWithType.vb: RestModelOptionsBuilderExtensions.Get(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: Get(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: Get``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: Get<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.Get<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: Get
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 63
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request using Entity Framework\n"
  remarks: This function simply calls <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602.SetupGet" data-throw-if-not-resolved="false"></xref>, makes GET requests more consistent in Entity Framework with the other requests
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> Get<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Get(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get*
  nameWithType.vb: RestModelOptionsBuilderExtensions.Get(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: Get(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 79
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET by primary key request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameters
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters that will make up the primary key to filter by
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 103
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 127
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by route values using Entity Framework. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 155
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by route values using Entity Framework. The names of the route values\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 182
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 201
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by query parameters using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 225
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by a primary key query parameter using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 244
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by query parameters using Entity Framework. The names of the query\nparameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: GetByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: GetByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.Get.cs
    startLine: 263
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a GET request by query parameters on the same route pattern using Entity Framework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> GetByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: GetByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 35
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: routeValues
      type: System.String[]
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 61
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 94
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route pattern, comparing the\ngiven property with a route value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: routeValues
      type: System.String[]
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 114
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 132
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 150
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: routeValue
      type: System.String
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 170
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: routeValue
      type: System.String
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 190
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 211
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PatchUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 232
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PatchUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 250
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework. The property to compare is assumed to be\ndirectly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 269
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework. The property to compare is assumed to be\ndirectly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 286
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 304
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 322
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PatchUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 338
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PatchUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 355
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: retrievers
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, RestModels.ParameterRetrievers.ParameterRetriever, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 383
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, ParameterRetriever retriever, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: retriever
      type: RestModels.ParameterRetrievers.ParameterRetriever
      description: The parameter to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), retriever As ParameterRetriever, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), RestModels.ParameterRetrievers.ParameterRetriever, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 407
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: retrievers
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 425
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update by primary key request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameters
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters that will make up the primary key to filter by
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 453
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 475
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 491
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 509
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PATCH update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 539
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PATCH update request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 558
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PATCH update request by query parameters using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 580
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PATCH update request by a primary key query parameter using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 600
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PATCH update request by query parameters using Entity Framework. The names of the\nquery\nparameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 620
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request by query parameters on the same route pattern using Entity\nFramework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 641
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: queryParameters
      type: System.String[]
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 667
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 689
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route pattern, comparing the\ngiven property with a query parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: queryParameters
      type: System.String[]
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 709
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 727
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 745
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: queryParameter
      type: System.String
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 769
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: queryParameter
      type: System.String
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 791
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 814
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PatchUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PatchUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PatchUpdate.cs
    startLine: 837
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PATCH update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PatchUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PatchUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PatchUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostCreate<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostCreate<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostCreate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostCreate
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostCreate.cs
    startLine: 27
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST creation request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostCreate<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostCreate(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostCreate(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostCreate``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostCreate<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostCreate<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostCreate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostCreate
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostCreate.cs
    startLine: 51
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST creation request with the same route pattern using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostCreate<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostCreate(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostCreate(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 35
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: routeValues
      type: System.String[]
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 61
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 94
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route pattern, comparing the\ngiven property with a route value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: routeValues
      type: System.String[]
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 114
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 132
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 150
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: routeValue
      type: System.String
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 170
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: routeValue
      type: System.String
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 190
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 211
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PostUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 232
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PostUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 250
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework. The property to compare is assumed to be\ndirectly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 269
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework. The property to compare is assumed to be\ndirectly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 286
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 304
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 322
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PostUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 338
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PostUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 355
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: retrievers
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, RestModels.ParameterRetrievers.ParameterRetriever, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 383
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, ParameterRetriever retriever, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: retriever
      type: RestModels.ParameterRetrievers.ParameterRetriever
      description: The parameter to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), retriever As ParameterRetriever, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), RestModels.ParameterRetrievers.ParameterRetriever, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 407
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: retrievers
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 425
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update by primary key request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameters
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters that will make up the primary key to filter by
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 453
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 475
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 491
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 509
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a POST update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 539
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a POST update request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 558
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a POST update request by query parameters using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 580
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a POST update request by a primary key query parameter using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 600
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a POST update request by query parameters using Entity Framework. The names of the\nquery\nparameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 620
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request by query parameters on the same route pattern using Entity\nFramework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 641
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: queryParameters
      type: System.String[]
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 667
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 689
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route pattern, comparing the\ngiven property with a query parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: queryParameters
      type: System.String[]
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 709
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 727
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 745
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: queryParameter
      type: System.String
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 769
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: queryParameter
      type: System.String
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 791
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 814
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PostUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PostUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PostUpdate.cs
    startLine: 837
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a POST update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PostUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PostUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PostUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 35
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: routeValues
      type: System.String[]
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 61
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 94
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route pattern, comparing the\ngiven property with a route value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] routeValues, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: routeValues
      type: System.String[]
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), routeValues As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 114
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 132
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update. The names of the route values will be camelCase versions of the\nC# properties to compare. If these route values do not yet exist, they will be added to the end of the route\npattern in order.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 150
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: routeValue
      type: System.String
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 170
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nroute value to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string routeValue, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: routeValue
      type: System.String
      description: The route value names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), routeValue As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 190
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 211
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PutUpdateBy``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateBy
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 232
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route, comparing the given\nproperty with a route value to determine which elements to update. The name of the route value will be a camelCase\nversion of the C# property to compare. If this route value does not yet exist, it will be added to the end of the\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateBy<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateBy(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PutUpdateBy(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 250
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework. The property to compare is assumed to be\ndirectly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 269
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework. The property to compare is assumed to be\ndirectly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 286
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 304
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 322
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PutUpdateByBody``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByBody
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 338
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework. The properties to compare are assumed to\nbe directly set in the parsed model\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByBody<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByBody(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PutUpdateByBody(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 355
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: retrievers
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},RestModels.ParameterRetrievers.ParameterRetriever,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, ParameterRetriever, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, RestModels.ParameterRetrievers.ParameterRetriever, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 383
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, ParameterRetriever retriever, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: retriever
      type: RestModels.ParameterRetrievers.ParameterRetriever
      description: The parameter to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), retriever As ParameterRetriever, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), RestModels.ParameterRetrievers.ParameterRetriever, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), ParameterRetriever, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByParam``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByParam
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 407
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByParam<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, ParameterRetriever[] retrievers, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when update the model
    - id: retrievers
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByParam(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), retrievers As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByParam(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,RestModels.ParameterRetrievers.ParameterRetriever[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, ParameterRetriever[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, RestModels.ParameterRetrievers.ParameterRetriever[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 425
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update by primary key request using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, ParameterRetriever[] parameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameters
      type: RestModels.ParameterRetrievers.ParameterRetriever[]
      description: The parameters that will make up the primary key to filter by
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameters As ParameterRetriever(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, RestModels.ParameterRetrievers.ParameterRetriever(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, ParameterRetriever(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 453
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  id: PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 475
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser)) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 491
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 509
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PUT update request by route values using Entity Framework. The names of the route\nvalues\nwill be camelCased versions of the C# property name. If these route parameters do not already exist they will be\nadded in order, e.g. /key1/key2.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKey``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKey
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 539
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PUT update request by route values using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKey<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKey(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKey(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 558
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PUT update request by query parameters using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string[] parameterNames, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterNames
      type: System.String[]
      description: The names of the route value parameters to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterNames As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 580
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PUT update request by a primary key query parameter using Entity Framework\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, string parameterName, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: parameterName
      type: System.String
      description: The name of the route value parameter to use
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, parameterName As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 600
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets a route up to handle a PUT update request by query parameters using Entity Framework. The names of the\nquery\nparameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByPrimaryKeyQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByPrimaryKeyQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 620
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request by query parameters on the same route pattern using Entity\nFramework.\nThe names of the query parameters will be camelCased names of the primary key of the entity\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByPrimaryKeyQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByPrimaryKeyQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByPrimaryKeyQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 641
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: queryParameters
      type: System.String[]
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 667
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.String[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], String[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.String[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 689
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route pattern, comparing the\ngiven property with a query parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, string[] queryParameters, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: queryParameters
      type: System.String[]
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), queryParameters As String(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.String(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), String(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[], Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[], System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 709
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>>[] propertyExpressions, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpressions As Expression(Of Func(Of TModel, Object))(), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser))) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))(), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))(), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 727
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update. The names of the query parameters will be camelCase versions\nof the\nC# properties to compare.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object))())
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 745
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: queryParameter
      type: System.String
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 769
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework, comparing the given property with a\nquery parameter to determine which elements to update\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, string queryParameter, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: queryParameter
      type: System.String
      description: The query parameter names to use to get the property values for a request
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), queryParameter As String, optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 791
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1}})
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 814
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, Expression<Func<TModel, object>> propertyExpression, Action<RestModelOptionsBuilder<TModel, TUser>> optionsHandler = null)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpression
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
      description: An expression representing the property to compare when updating the model
    - id: optionsHandler
      type: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
      description: A handler for the route options
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, propertyExpression As Expression(Of Func(Of TModel, Object)), optionsHandler As Action(Of RestModelOptionsBuilder(Of TModel, TUser)) = Nothing) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object)), System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object)), Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  commentId: M:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  id: PutUpdateByQuery``2(RestModels.Options.Builder.RestModelOptionsBuilder{``0,``1},System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])
  isExtensionMethod: true
  parent: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions
  langs:
  - csharp
  - vb
  name: PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModelOptionsBuilder<TModel, TUser>, String, Expression<Func<TModel, Object>>[])
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery<TModel, TUser>(RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>, System.String, System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[])
  type: Method
  source:
    remote:
      path: RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
      branch: master
      repo: git@github.com:jlynch630/RestModels.git
    id: PutUpdateByQuery
    path: ../../RestModels.EntityFramework/Extensions/RestModelOptionsBuilderExtensions.PutUpdate.cs
    startLine: 837
  assemblies:
  - RestModels.EntityFramework
  namespace: RestModels.EntityFramework.Extensions
  summary: "\nSets this route up to handle a PUT update request using Entity Framework at the same route, comparing the given\nproperty with a query parameter to determine which elements to update. The name of the query parameter will be a\ncamelCase\nversion of the C# property to compare. If this query parameter does not yet exist, it will be added to the end of\nthe\nroute pattern.\n"
  example: []
  syntax:
    content: >-
      public static RestModelOptionsBuilder<TModel, TUser> PutUpdateByQuery<TModel, TUser>(this RestModelOptionsBuilder<TModel, TUser> builder, string routePattern, params Expression<Func<TModel, object>>[] propertyExpressions)

          where TModel : class where TUser : class
    parameters:
    - id: builder
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: The options builder to perform the operation on
    - id: routePattern
      type: System.String
      description: The route pattern to set up the request for
    - id: propertyExpressions
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
      description: Expressions representing the properties to compare when updating the model
    typeParameters:
    - id: TModel
      description: The model type that the API is being built for
    - id: TUser
      description: The type of authenticated user context
    return:
      type: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
      description: This <xref href="RestModels.Options.Builder.RestModelOptionsBuilder%602" data-throw-if-not-resolved="false"></xref> object, for chaining
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function PutUpdateByQuery(Of TModel As Class, TUser As Class)(builder As RestModelOptionsBuilder(Of TModel, TUser), routePattern As String, ParamArray propertyExpressions As Expression(Of Func(Of TModel, Object))()) As RestModelOptionsBuilder(Of TModel, TUser)
  overload: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  nameWithType.vb: RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery(Of TModel, TUser)(RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser), System.String, System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))())
  name.vb: PutUpdateByQuery(Of TModel, TUser)(RestModelOptionsBuilder(Of TModel, TUser), String, Expression(Of Func(Of TModel, Object))())
references:
- uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
  commentId: T:RestModels.Options.Builder.RestModelOptionsBuilder`2
  name: RestModelOptionsBuilder<TModel, TUser>
  nameWithType: RestModelOptionsBuilder<TModel, TUser>
  fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>
  nameWithType.vb: RestModelOptionsBuilder(Of TModel, TUser)
  fullName.vb: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)
  name.vb: RestModelOptionsBuilder(Of TModel, TUser)
  spec.csharp:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.EntityFramework.Extensions
  commentId: N:RestModels.EntityFramework.Extensions
  name: RestModels.EntityFramework.Extensions
  nameWithType: RestModels.EntityFramework.Extensions
  fullName: RestModels.EntityFramework.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey
  name: IgnorePrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.IgnorePrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IgnorePrimaryKey
- uid: RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}
  commentId: T:RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}
  parent: RestModels.Options.Builder
  definition: RestModels.Options.Builder.RestModelOptionsBuilder`2
  name: RestModelOptionsBuilder<TModel, TUser>
  nameWithType: RestModelOptionsBuilder<TModel, TUser>
  fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>
  nameWithType.vb: RestModelOptionsBuilder(Of TModel, TUser)
  fullName.vb: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)
  name.vb: RestModelOptionsBuilder(Of TModel, TUser)
  spec.csharp:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Options.Builder
  commentId: N:RestModels.Options.Builder
  name: RestModels.Options.Builder
  nameWithType: RestModels.Options.Builder
  fullName: RestModels.Options.Builder
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey
  name: IncludePrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.IncludePrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.IncludePrimaryKey
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey
  name: OmitPrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.OmitPrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.OmitPrimaryKey
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey
  name: FilterByPrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKey
- uid: RestModels.ParameterRetrievers.ParameterRetriever[]
  isExternal: true
  name: ParameterRetriever[]
  nameWithType: ParameterRetriever[]
  fullName: RestModels.ParameterRetrievers.ParameterRetriever[]
  nameWithType.vb: ParameterRetriever()
  fullName.vb: RestModels.ParameterRetrievers.ParameterRetriever()
  name.vb: ParameterRetriever()
  spec.csharp:
  - uid: RestModels.ParameterRetrievers.ParameterRetriever
    name: ParameterRetriever
    nameWithType: ParameterRetriever
    fullName: RestModels.ParameterRetrievers.ParameterRetriever
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: RestModels.ParameterRetrievers.ParameterRetriever
    name: ParameterRetriever
    nameWithType: ParameterRetriever
    fullName: RestModels.ParameterRetrievers.ParameterRetriever
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery
  name: FilterByPrimaryKeyQuery
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyQuery
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute
  name: FilterByPrimaryKeyRoute
  nameWithType: RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.FilterByPrimaryKeyRoute
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete
  name: Delete
  nameWithType: RestModelOptionsBuilderExtensions.Delete
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Delete
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{{TModel},{TUser}}}
  commentId: T:System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}}
  parent: System
  definition: System.Action`1
  name: Action<RestModelOptionsBuilder<TModel, TUser>>
  nameWithType: Action<RestModelOptionsBuilder<TModel, TUser>>
  fullName: System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>
  nameWithType.vb: Action(Of RestModelOptionsBuilder(Of TModel, TUser))
  fullName.vb: System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser))
  name.vb: Action(Of RestModelOptionsBuilder(Of TModel, TUser))
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey
  name: DeleteByPrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKey
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
  name: DeleteByPrimaryKeyQuery
  nameWithType: RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.DeleteByPrimaryKeyQuery
- uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
  commentId: M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
  isExternal: true
  name: SetupGet(String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilder<TModel, TUser>.SetupGet(String, Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>.SetupGet(System.String, System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType.vb: RestModelOptionsBuilder(Of TModel, TUser).SetupGet(String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  fullName.vb: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser).SetupGet(System.String, System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: SetupGet(String, Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  spec.csharp:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
    name: SetupGet
    nameWithType: RestModelOptionsBuilder<TModel, TUser>.SetupGet
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>.SetupGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.String,System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
    name: SetupGet
    nameWithType: RestModelOptionsBuilder(Of TModel, TUser).SetupGet
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser).SetupGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get
  name: Get
  nameWithType: RestModelOptionsBuilderExtensions.Get
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.Get
- uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
  commentId: M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
  isExternal: true
  name: SetupGet(Action<RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType: RestModelOptionsBuilder<TModel, TUser>.SetupGet(Action<RestModelOptionsBuilder<TModel, TUser>>)
  fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>.SetupGet(System.Action<RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>>)
  nameWithType.vb: RestModelOptionsBuilder(Of TModel, TUser).SetupGet(Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  fullName.vb: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser).SetupGet(System.Action(Of RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser)))
  name.vb: SetupGet(Action(Of RestModelOptionsBuilder(Of TModel, TUser)))
  spec.csharp:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
    name: SetupGet
    nameWithType: RestModelOptionsBuilder<TModel, TUser>.SetupGet
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>.SetupGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet(System.Action{RestModels.Options.Builder.RestModelOptionsBuilder{`0,`1}})
    name: SetupGet
    nameWithType: RestModelOptionsBuilder(Of TModel, TUser).SetupGet
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser).SetupGet
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2
    name: RestModelOptionsBuilder
    nameWithType: RestModelOptionsBuilder
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet
  commentId: M:RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet
  name: SetupGet()
  nameWithType: RestModelOptionsBuilder<TModel, TUser>.SetupGet()
  fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>.SetupGet()
  nameWithType.vb: RestModelOptionsBuilder(Of TModel, TUser).SetupGet()
  fullName.vb: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser).SetupGet()
  spec.csharp:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet
    name: SetupGet
    nameWithType: RestModelOptionsBuilder<TModel, TUser>.SetupGet
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder<TModel, TUser>.SetupGet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: RestModels.Options.Builder.RestModelOptionsBuilder`2.SetupGet
    name: SetupGet
    nameWithType: RestModelOptionsBuilder(Of TModel, TUser).SetupGet
    fullName: RestModels.Options.Builder.RestModelOptionsBuilder(Of TModel, TUser).SetupGet
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey
  name: GetByPrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKey
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery
  name: GetByPrimaryKeyQuery
  nameWithType: RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.GetByPrimaryKeyQuery
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy
  name: PatchUpdateBy
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateBy
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateBy
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}[]
  isExternal: true
  name: Expression<Func<TModel, Object>>[]
  nameWithType: Expression<Func<TModel, Object>>[]
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>[]
  nameWithType.vb: Expression(Of Func(Of TModel, Object))()
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))()
  name.vb: Expression(Of Func(Of TModel, Object))()
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, Object>>
  nameWithType: Expression<Func<TModel, Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, System.Object>>
  nameWithType.vb: Expression(Of Func(Of TModel, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Object))
  name.vb: Expression(Of Func(Of TModel, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody
  name: PatchUpdateByBody
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByBody
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByBody
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam
  name: PatchUpdateByParam
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByParam
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByParam
- uid: RestModels.ParameterRetrievers.ParameterRetriever
  commentId: T:RestModels.ParameterRetrievers.ParameterRetriever
  parent: RestModels.ParameterRetrievers
  name: ParameterRetriever
  nameWithType: ParameterRetriever
  fullName: RestModels.ParameterRetrievers.ParameterRetriever
- uid: RestModels.ParameterRetrievers
  commentId: N:RestModels.ParameterRetrievers
  name: RestModels.ParameterRetrievers
  nameWithType: RestModels.ParameterRetrievers
  fullName: RestModels.ParameterRetrievers
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey
  name: PatchUpdateByPrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKey
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
  name: PatchUpdateByPrimaryKeyQuery
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByPrimaryKeyQuery
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery
  name: PatchUpdateByQuery
  nameWithType: RestModelOptionsBuilderExtensions.PatchUpdateByQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PatchUpdateByQuery
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate
  name: PostCreate
  nameWithType: RestModelOptionsBuilderExtensions.PostCreate
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostCreate
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy
  name: PostUpdateBy
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateBy
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateBy
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody
  name: PostUpdateByBody
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByBody
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByBody
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam
  name: PostUpdateByParam
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByParam
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByParam
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey
  name: PostUpdateByPrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKey
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
  name: PostUpdateByPrimaryKeyQuery
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByPrimaryKeyQuery
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery
  name: PostUpdateByQuery
  nameWithType: RestModelOptionsBuilderExtensions.PostUpdateByQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PostUpdateByQuery
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy
  name: PutUpdateBy
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateBy
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateBy
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody
  name: PutUpdateByBody
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByBody
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByBody
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam
  name: PutUpdateByParam
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByParam
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByParam
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey
  name: PutUpdateByPrimaryKey
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKey
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
  name: PutUpdateByPrimaryKeyQuery
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByPrimaryKeyQuery
- uid: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery*
  commentId: Overload:RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery
  name: PutUpdateByQuery
  nameWithType: RestModelOptionsBuilderExtensions.PutUpdateByQuery
  fullName: RestModels.EntityFramework.Extensions.RestModelOptionsBuilderExtensions.PutUpdateByQuery
